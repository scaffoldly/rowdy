{
  "openapi": "3.1.0",
  "info": {
    "title": "runtime.v1"
  },
  "paths": {
    "/runtime.v1.ImageService/ImageFsInfo": {
      "post": {
        "tags": [
          "runtime.v1.ImageService"
        ],
        "summary": "ImageFSInfo returns information of the filesystem that is used to store images.",
        "description": "ImageFSInfo returns information of the filesystem that is used to store images.",
        "operationId": "runtime.v1.ImageService.ImageFsInfo",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.ImageFsInfoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.ImageFsInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.ImageService/ImageStatus": {
      "post": {
        "tags": [
          "runtime.v1.ImageService"
        ],
        "summary": "ImageStatus returns the status of the image. If the image is not  present, returns a response with ImageStatusResponse.Image set to  nil.",
        "description": "ImageStatus returns the status of the image. If the image is not\n present, returns a response with ImageStatusResponse.Image set to\n nil.",
        "operationId": "runtime.v1.ImageService.ImageStatus",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.ImageStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.ImageStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.ImageService/ListImages": {
      "post": {
        "tags": [
          "runtime.v1.ImageService"
        ],
        "summary": "ListImages lists existing images.",
        "description": "ListImages lists existing images.",
        "operationId": "runtime.v1.ImageService.ListImages",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.ListImagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.ListImagesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.ImageService/PullImage": {
      "post": {
        "tags": [
          "runtime.v1.ImageService"
        ],
        "summary": "PullImage pulls an image with authentication config.",
        "description": "PullImage pulls an image with authentication config.",
        "operationId": "runtime.v1.ImageService.PullImage",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.PullImageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.PullImageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.ImageService/RemoveImage": {
      "post": {
        "tags": [
          "runtime.v1.ImageService"
        ],
        "summary": "RemoveImage removes the image.  This call is idempotent, and must not return an error if the image has  already been removed.",
        "description": "RemoveImage removes the image.\n This call is idempotent, and must not return an error if the image has\n already been removed.",
        "operationId": "runtime.v1.ImageService.RemoveImage",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.RemoveImageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.RemoveImageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/Attach": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "Attach prepares a streaming endpoint to attach to a running container.",
        "description": "Attach prepares a streaming endpoint to attach to a running container.",
        "operationId": "runtime.v1.RuntimeService.Attach",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.AttachRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.AttachResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/CheckpointContainer": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "CheckpointContainer checkpoints a container",
        "description": "CheckpointContainer checkpoints a container",
        "operationId": "runtime.v1.RuntimeService.CheckpointContainer",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.CheckpointContainerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.CheckpointContainerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/ContainerStats": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "ContainerStats returns stats of the container. If the container does not  exist, the call returns an error.",
        "description": "ContainerStats returns stats of the container. If the container does not\n exist, the call returns an error.",
        "operationId": "runtime.v1.RuntimeService.ContainerStats",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.ContainerStatsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.ContainerStatsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/ContainerStatus": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "ContainerStatus returns status of the container. If the container is not  present, returns an error.",
        "description": "ContainerStatus returns status of the container. If the container is not\n present, returns an error.",
        "operationId": "runtime.v1.RuntimeService.ContainerStatus",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.ContainerStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.ContainerStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/CreateContainer": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "CreateContainer creates a new container in specified PodSandbox",
        "description": "CreateContainer creates a new container in specified PodSandbox",
        "operationId": "runtime.v1.RuntimeService.CreateContainer",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.CreateContainerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.CreateContainerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/Exec": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "Exec prepares a streaming endpoint to execute a command in the container.",
        "description": "Exec prepares a streaming endpoint to execute a command in the container.",
        "operationId": "runtime.v1.RuntimeService.Exec",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.ExecRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.ExecResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/ExecSync": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "ExecSync runs a command in a container synchronously.",
        "description": "ExecSync runs a command in a container synchronously.",
        "operationId": "runtime.v1.RuntimeService.ExecSync",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.ExecSyncRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.ExecSyncResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/GetContainerEvents": {},
    "/runtime.v1.RuntimeService/ListContainerStats": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "ListContainerStats returns stats of all running containers.",
        "description": "ListContainerStats returns stats of all running containers.",
        "operationId": "runtime.v1.RuntimeService.ListContainerStats",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.ListContainerStatsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.ListContainerStatsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/ListContainers": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "ListContainers lists all containers by filters.",
        "description": "ListContainers lists all containers by filters.",
        "operationId": "runtime.v1.RuntimeService.ListContainers",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.ListContainersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.ListContainersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/ListMetricDescriptors": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "ListMetricDescriptors gets the descriptors for the metrics that will be returned in ListPodSandboxMetrics.  This list should be static at startup: either the client and server restart together when  adding or removing metrics descriptors, or they should not change.  Put differently, if ListPodSandboxMetrics references a name that is not described in the initial  ListMetricDescriptors call, then the metric will not be broadcasted.",
        "description": "ListMetricDescriptors gets the descriptors for the metrics that will be returned in ListPodSandboxMetrics.\n This list should be static at startup: either the client and server restart together when\n adding or removing metrics descriptors, or they should not change.\n Put differently, if ListPodSandboxMetrics references a name that is not described in the initial\n ListMetricDescriptors call, then the metric will not be broadcasted.",
        "operationId": "runtime.v1.RuntimeService.ListMetricDescriptors",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.ListMetricDescriptorsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.ListMetricDescriptorsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/ListPodSandbox": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "ListPodSandbox returns a list of PodSandboxes.",
        "description": "ListPodSandbox returns a list of PodSandboxes.",
        "operationId": "runtime.v1.RuntimeService.ListPodSandbox",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.ListPodSandboxRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.ListPodSandboxResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/ListPodSandboxMetrics": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "ListPodSandboxMetrics gets pod sandbox metrics from CRI Runtime",
        "description": "ListPodSandboxMetrics gets pod sandbox metrics from CRI Runtime",
        "operationId": "runtime.v1.RuntimeService.ListPodSandboxMetrics",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.ListPodSandboxMetricsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.ListPodSandboxMetricsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/ListPodSandboxStats": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "ListPodSandboxStats returns stats of the pod sandboxes matching a filter.",
        "description": "ListPodSandboxStats returns stats of the pod sandboxes matching a filter.",
        "operationId": "runtime.v1.RuntimeService.ListPodSandboxStats",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.ListPodSandboxStatsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.ListPodSandboxStatsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/PodSandboxStats": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "PodSandboxStats returns stats of the pod sandbox. If the pod sandbox does not  exist, the call returns an error.",
        "description": "PodSandboxStats returns stats of the pod sandbox. If the pod sandbox does not\n exist, the call returns an error.",
        "operationId": "runtime.v1.RuntimeService.PodSandboxStats",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.PodSandboxStatsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.PodSandboxStatsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/PodSandboxStatus": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "PodSandboxStatus returns the status of the PodSandbox. If the PodSandbox is not  present, returns an error.",
        "description": "PodSandboxStatus returns the status of the PodSandbox. If the PodSandbox is not\n present, returns an error.",
        "operationId": "runtime.v1.RuntimeService.PodSandboxStatus",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.PodSandboxStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.PodSandboxStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/PortForward": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "PortForward prepares a streaming endpoint to forward ports from a PodSandbox.",
        "description": "PortForward prepares a streaming endpoint to forward ports from a PodSandbox.",
        "operationId": "runtime.v1.RuntimeService.PortForward",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.PortForwardRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.PortForwardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/RemoveContainer": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "RemoveContainer removes the container. If the container is running, the  container must be forcibly removed.  This call is idempotent, and must not return an error if the container has  already been removed.",
        "description": "RemoveContainer removes the container. If the container is running, the\n container must be forcibly removed.\n This call is idempotent, and must not return an error if the container has\n already been removed.",
        "operationId": "runtime.v1.RuntimeService.RemoveContainer",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.RemoveContainerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.RemoveContainerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/RemovePodSandbox": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "RemovePodSandbox removes the sandbox. If there are any running containers  in the sandbox, they must be forcibly terminated and removed.  This call is idempotent, and must not return an error if the sandbox has  already been removed.",
        "description": "RemovePodSandbox removes the sandbox. If there are any running containers\n in the sandbox, they must be forcibly terminated and removed.\n This call is idempotent, and must not return an error if the sandbox has\n already been removed.",
        "operationId": "runtime.v1.RuntimeService.RemovePodSandbox",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.RemovePodSandboxRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.RemovePodSandboxResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/ReopenContainerLog": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "ReopenContainerLog asks runtime to reopen the stdout/stderr log file  for the container. This is often called after the log file has been  rotated. If the container is not running, container runtime can choose  to either create a new log file and return nil, or return an error.  Once it returns error, new container log file MUST NOT be created.",
        "description": "ReopenContainerLog asks runtime to reopen the stdout/stderr log file\n for the container. This is often called after the log file has been\n rotated. If the container is not running, container runtime can choose\n to either create a new log file and return nil, or return an error.\n Once it returns error, new container log file MUST NOT be created.",
        "operationId": "runtime.v1.RuntimeService.ReopenContainerLog",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.ReopenContainerLogRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.ReopenContainerLogResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/RunPodSandbox": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "RunPodSandbox creates and starts a pod-level sandbox. Runtimes must ensure  the sandbox is in the ready state on success.",
        "description": "RunPodSandbox creates and starts a pod-level sandbox. Runtimes must ensure\n the sandbox is in the ready state on success.",
        "operationId": "runtime.v1.RuntimeService.RunPodSandbox",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.RunPodSandboxRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.RunPodSandboxResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/RuntimeConfig": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "RuntimeConfig returns configuration information of the runtime.  A couple of notes:  - The RuntimeConfigRequest object is not to be confused with the contents of UpdateRuntimeConfigRequest.    The former is for having runtime tell Kubelet what to do, the latter vice versa.  - It is the expectation of the Kubelet that these fields are static for the lifecycle of the Kubelet.    The Kubelet will not re-request the RuntimeConfiguration after startup, and CRI implementations should    avoid updating them without a full node reboot.",
        "description": "RuntimeConfig returns configuration information of the runtime.\n A couple of notes:\n - The RuntimeConfigRequest object is not to be confused with the contents of UpdateRuntimeConfigRequest.\n   The former is for having runtime tell Kubelet what to do, the latter vice versa.\n - It is the expectation of the Kubelet that these fields are static for the lifecycle of the Kubelet.\n   The Kubelet will not re-request the RuntimeConfiguration after startup, and CRI implementations should\n   avoid updating them without a full node reboot.",
        "operationId": "runtime.v1.RuntimeService.RuntimeConfig",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.RuntimeConfigRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.RuntimeConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/StartContainer": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "StartContainer starts the container.",
        "description": "StartContainer starts the container.",
        "operationId": "runtime.v1.RuntimeService.StartContainer",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.StartContainerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.StartContainerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/Status": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "Status returns the status of the runtime.",
        "description": "Status returns the status of the runtime.",
        "operationId": "runtime.v1.RuntimeService.Status",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.StatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.StatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/StopContainer": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "StopContainer stops a running container with a grace period (i.e., timeout).  This call is idempotent, and must not return an error if the container has  already been stopped.  The runtime must forcibly kill the container after the grace period is  reached.",
        "description": "StopContainer stops a running container with a grace period (i.e., timeout).\n This call is idempotent, and must not return an error if the container has\n already been stopped.\n The runtime must forcibly kill the container after the grace period is\n reached.",
        "operationId": "runtime.v1.RuntimeService.StopContainer",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.StopContainerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.StopContainerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/StopPodSandbox": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "StopPodSandbox stops any running process that is part of the sandbox and  reclaims network resources (e.g., IP addresses) allocated to the sandbox.  If there are any running containers in the sandbox, they must be forcibly  terminated.  This call is idempotent, and must not return an error if all relevant  resources have already been reclaimed. kubelet will call StopPodSandbox  at least once before calling RemovePodSandbox. It will also attempt to  reclaim resources eagerly, as soon as a sandbox is not needed. Hence,  multiple StopPodSandbox calls are expected.",
        "description": "StopPodSandbox stops any running process that is part of the sandbox and\n reclaims network resources (e.g., IP addresses) allocated to the sandbox.\n If there are any running containers in the sandbox, they must be forcibly\n terminated.\n This call is idempotent, and must not return an error if all relevant\n resources have already been reclaimed. kubelet will call StopPodSandbox\n at least once before calling RemovePodSandbox. It will also attempt to\n reclaim resources eagerly, as soon as a sandbox is not needed. Hence,\n multiple StopPodSandbox calls are expected.",
        "operationId": "runtime.v1.RuntimeService.StopPodSandbox",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.StopPodSandboxRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.StopPodSandboxResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/UpdateContainerResources": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "UpdateContainerResources updates ContainerConfig of the container synchronously.  If runtime fails to transactionally update the requested resources, an error is returned.",
        "description": "UpdateContainerResources updates ContainerConfig of the container synchronously.\n If runtime fails to transactionally update the requested resources, an error is returned.",
        "operationId": "runtime.v1.RuntimeService.UpdateContainerResources",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.UpdateContainerResourcesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.UpdateContainerResourcesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/UpdatePodSandboxResources": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "UpdatePodSandboxResources synchronously updates the PodSandboxConfig with  the pod-level resource configuration. This method is called _after_ the  Kubelet reconfigures the pod-level cgroups.  This request is treated as best effort, and failure will not block the  Kubelet with proceeding with a resize.",
        "description": "UpdatePodSandboxResources synchronously updates the PodSandboxConfig with\n the pod-level resource configuration. This method is called _after_ the\n Kubelet reconfigures the pod-level cgroups.\n This request is treated as best effort, and failure will not block the\n Kubelet with proceeding with a resize.",
        "operationId": "runtime.v1.RuntimeService.UpdatePodSandboxResources",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.UpdatePodSandboxResourcesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.UpdatePodSandboxResourcesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/UpdateRuntimeConfig": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "UpdateRuntimeConfig updates the runtime configuration based on the given request.",
        "description": "UpdateRuntimeConfig updates the runtime configuration based on the given request.",
        "operationId": "runtime.v1.RuntimeService.UpdateRuntimeConfig",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.UpdateRuntimeConfigRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.UpdateRuntimeConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/runtime.v1.RuntimeService/Version": {
      "post": {
        "tags": [
          "runtime.v1.RuntimeService"
        ],
        "summary": "Version returns the runtime name, runtime version, and runtime API version.",
        "description": "Version returns the runtime name, runtime version, and runtime API version.",
        "operationId": "runtime.v1.RuntimeService.Version",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.v1.VersionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.v1.VersionResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "connect-protocol-version": {
        "type": "number",
        "title": "Connect-Protocol-Version",
        "enum": [
          1
        ],
        "description": "Define the version of the Connect protocol",
        "const": 1
      },
      "connect-timeout-header": {
        "type": "number",
        "title": "Connect-Timeout-Ms",
        "description": "Define the timeout, in ms"
      },
      "connect.error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "examples": [
              "not_found"
            ],
            "enum": [
              "canceled",
              "unknown",
              "invalid_argument",
              "deadline_exceeded",
              "not_found",
              "already_exists",
              "permission_denied",
              "resource_exhausted",
              "failed_precondition",
              "aborted",
              "out_of_range",
              "unimplemented",
              "internal",
              "unavailable",
              "data_loss",
              "unauthenticated"
            ],
            "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
          },
          "message": {
            "type": "string",
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/connect.error_details.Any"
            },
            "description": "A list of messages that carry the error details. There is no limit on the number of messages."
          }
        },
        "title": "Connect Error",
        "additionalProperties": true,
        "description": "Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation"
      },
      "connect.error_details.Any": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "A URL that acts as a globally unique identifier for the type of the serialized message. For example: `type.googleapis.com/google.rpc.ErrorInfo`. This is used to determine the schema of the data in the `value` field and is the discriminator for the `debug` field."
          },
          "value": {
            "type": "string",
            "format": "binary",
            "description": "The Protobuf message, serialized as bytes and base64-encoded. The specific message type is identified by the `type` field."
          },
          "debug": {
            "oneOf": [
              {
                "type": "object",
                "title": "Any",
                "additionalProperties": true,
                "description": "Detailed error information."
              }
            ],
            "discriminator": {
              "propertyName": "type"
            },
            "title": "Debug",
            "description": "Deserialized error detail payload. The 'type' field indicates the schema. This field is for easier debugging and should not be relied upon for application logic."
          }
        },
        "additionalProperties": true,
        "description": "Contains an arbitrary serialized message along with a @type that describes the type of the serialized message, with an additional debug field for ConnectRPC error details."
      },
      "runtime.v1.AttachRequest": {
        "type": "object",
        "properties": {
          "containerId": {
            "type": "string",
            "title": "container_id",
            "description": "ID of the container to which to attach."
          },
          "stdin": {
            "type": "boolean",
            "title": "stdin",
            "description": "Whether to stream stdin.\n One of `stdin`, `stdout`, and `stderr` MUST be true."
          },
          "tty": {
            "type": "boolean",
            "title": "tty",
            "description": "Whether the process being attached is running in a TTY.\n This must match the TTY setting in the ContainerConfig."
          },
          "stdout": {
            "type": "boolean",
            "title": "stdout",
            "description": "Whether to stream stdout.\n One of `stdin`, `stdout`, and `stderr` MUST be true."
          },
          "stderr": {
            "type": "boolean",
            "title": "stderr",
            "description": "Whether to stream stderr.\n One of `stdin`, `stdout`, and `stderr` MUST be true.\n If `tty` is true, `stderr` MUST be false. Multiplexing is not supported\n in this case. The output of stdout and stderr will be combined to a\n single stream."
          }
        },
        "title": "AttachRequest",
        "additionalProperties": false
      },
      "runtime.v1.AttachResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "title": "url",
            "description": "Fully qualified URL of the attach streaming server."
          }
        },
        "title": "AttachResponse",
        "additionalProperties": false
      },
      "runtime.v1.AuthConfig": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "title": "username"
          },
          "password": {
            "type": "string",
            "title": "password"
          },
          "auth": {
            "type": "string",
            "title": "auth"
          },
          "serverAddress": {
            "type": "string",
            "title": "server_address"
          },
          "identityToken": {
            "type": "string",
            "title": "identity_token",
            "description": "IdentityToken is used to authenticate the user and get\n an access token for the registry."
          },
          "registryToken": {
            "type": "string",
            "title": "registry_token",
            "description": "RegistryToken is a bearer token to be sent to a registry"
          }
        },
        "title": "AuthConfig",
        "additionalProperties": false,
        "description": "AuthConfig contains authorization information for connecting to a registry."
      },
      "runtime.v1.CDIDevice": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "Fully qualified CDI device name\n for example: vendor.com/gpu=gpudevice1\n see more details in the CDI specification:\n https://github.com/container-orchestrated-devices/container-device-interface/blob/main/SPEC.md"
          }
        },
        "title": "CDIDevice",
        "additionalProperties": false,
        "description": "CDIDevice specifies a CDI device information."
      },
      "runtime.v1.Capability": {
        "type": "object",
        "properties": {
          "addCapabilities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "add_capabilities",
            "description": "List of capabilities to add."
          },
          "dropCapabilities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "drop_capabilities",
            "description": "List of capabilities to drop."
          },
          "addAmbientCapabilities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "add_ambient_capabilities",
            "description": "List of ambient capabilities to add."
          }
        },
        "title": "Capability",
        "additionalProperties": false,
        "description": "Capability contains the container capabilities to add or drop\n Dropping a capability will drop it from all sets.\n If a capability is added to only the add_capabilities list then it gets added to permitted,\n inheritable, effective and bounding sets, i.e. all sets except the ambient set.\n If a capability is added to only the add_ambient_capabilities list then it gets added to all sets, i.e permitted\n inheritable, effective, bounding and ambient sets.\n If a capability is added to add_capabilities and add_ambient_capabilities lists then it gets added to all sets, i.e.\n permitted, inheritable, effective, bounding and ambient sets."
      },
      "runtime.v1.CgroupDriver": {
        "type": "string",
        "title": "CgroupDriver",
        "enum": [
          "SYSTEMD",
          "CGROUPFS"
        ]
      },
      "runtime.v1.CheckpointContainerRequest": {
        "type": "object",
        "properties": {
          "containerId": {
            "type": "string",
            "title": "container_id",
            "description": "ID of the container to be checkpointed."
          },
          "location": {
            "type": "string",
            "title": "location",
            "description": "Location of the checkpoint archive used for export"
          },
          "timeout": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timeout",
            "format": "int64",
            "description": "Timeout in seconds for the checkpoint to complete.\n Timeout of zero means to use the CRI default.\n Timeout \u003e 0 means to use the user specified timeout."
          }
        },
        "title": "CheckpointContainerRequest",
        "additionalProperties": false
      },
      "runtime.v1.CheckpointContainerResponse": {
        "type": "object",
        "title": "CheckpointContainerResponse",
        "additionalProperties": false
      },
      "runtime.v1.Container": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "ID of the container, used by the container runtime to identify\n a container."
          },
          "podSandboxId": {
            "type": "string",
            "title": "pod_sandbox_id",
            "description": "ID of the sandbox to which this container belongs."
          },
          "metadata": {
            "title": "metadata",
            "description": "Metadata of the container.",
            "$ref": "#/components/schemas/runtime.v1.ContainerMetadata"
          },
          "image": {
            "title": "image",
            "description": "Spec of the image.",
            "$ref": "#/components/schemas/runtime.v1.ImageSpec"
          },
          "imageRef": {
            "type": "string",
            "title": "image_ref",
            "description": "Digested reference to the image in use."
          },
          "state": {
            "title": "state",
            "description": "State of the container.",
            "$ref": "#/components/schemas/runtime.v1.ContainerState"
          },
          "createdAt": {
            "type": [
              "integer",
              "string"
            ],
            "title": "created_at",
            "format": "int64",
            "description": "Creation time of the container in nanoseconds."
          },
          "labels": {
            "type": "object",
            "title": "labels",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Key-value pairs that may be used to scope and select individual resources."
          },
          "annotations": {
            "type": "object",
            "title": "annotations",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Unstructured key-value map holding arbitrary metadata.\n Annotations MUST NOT be altered by the runtime; the value of this field\n MUST be identical to that of the corresponding ContainerConfig used to\n instantiate this Container."
          },
          "imageId": {
            "type": "string",
            "title": "image_id",
            "description": "Reference to the unique identifier of the image, on the node, as\n returned in the image service apis.\n\n Note: The image_ref above has been historically used by container\n runtimes to reference images by digest. The image_ref has been also used\n in the kubelet image garbage collection, which does not work with\n digests at all. To separate and avoid possible misusage, we now\n introduce the image_id field, which should always refer to a unique\n image identifier on the node."
          }
        },
        "title": "Container",
        "additionalProperties": false,
        "description": "Container provides the runtime information for a container, such as ID, hash,\n state of the container."
      },
      "runtime.v1.Container.AnnotationsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "AnnotationsEntry",
        "additionalProperties": false
      },
      "runtime.v1.Container.LabelsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "LabelsEntry",
        "additionalProperties": false
      },
      "runtime.v1.ContainerAttributes": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "ID of the container."
          },
          "metadata": {
            "title": "metadata",
            "description": "Metadata of the container.",
            "$ref": "#/components/schemas/runtime.v1.ContainerMetadata"
          },
          "labels": {
            "type": "object",
            "title": "labels",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Key-value pairs that may be used to scope and select individual resources."
          },
          "annotations": {
            "type": "object",
            "title": "annotations",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Unstructured key-value map holding arbitrary metadata.\n Annotations MUST NOT be altered by the runtime; the value of this field\n MUST be identical to that of the corresponding ContainerConfig used to\n instantiate the Container this status represents."
          }
        },
        "title": "ContainerAttributes",
        "additionalProperties": false,
        "description": "ContainerAttributes provides basic information of the container."
      },
      "runtime.v1.ContainerAttributes.AnnotationsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "AnnotationsEntry",
        "additionalProperties": false
      },
      "runtime.v1.ContainerAttributes.LabelsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "LabelsEntry",
        "additionalProperties": false
      },
      "runtime.v1.ContainerConfig": {
        "type": "object",
        "properties": {
          "metadata": {
            "title": "metadata",
            "description": "Metadata of the container. This information will uniquely identify the\n container, and the runtime should leverage this to ensure correct\n operation. The runtime may also use this information to improve UX, such\n as by constructing a readable name.",
            "$ref": "#/components/schemas/runtime.v1.ContainerMetadata"
          },
          "image": {
            "title": "image",
            "description": "Image to use.",
            "$ref": "#/components/schemas/runtime.v1.ImageSpec"
          },
          "command": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "command",
            "description": "Command to execute (i.e., entrypoint for docker)"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "args",
            "description": "Args for the Command (i.e., command for docker)"
          },
          "workingDir": {
            "type": "string",
            "title": "working_dir",
            "description": "Current working directory of the command."
          },
          "envs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.KeyValue"
            },
            "title": "envs",
            "description": "List of environment variable to set in the container."
          },
          "mounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.Mount"
            },
            "title": "mounts",
            "description": "Mounts for the container."
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.Device"
            },
            "title": "devices",
            "description": "Devices for the container."
          },
          "labels": {
            "type": "object",
            "title": "labels",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Key-value pairs that may be used to scope and select individual resources.\n Label keys are of the form:\n     label-key ::= prefixed-name | name\n     prefixed-name ::= prefix '/' name\n     prefix ::= DNS_SUBDOMAIN\n     name ::= DNS_LABEL"
          },
          "annotations": {
            "type": "object",
            "title": "annotations",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Unstructured key-value map that may be used by the kubelet to store and\n retrieve arbitrary metadata.\n\n Annotations MUST NOT be altered by the runtime; the annotations stored\n here MUST be returned in the ContainerStatus associated with the container\n this ContainerConfig creates.\n\n In general, in order to preserve a well-defined interface between the\n kubelet and the container runtime, annotations SHOULD NOT influence\n runtime behaviour."
          },
          "logPath": {
            "type": "string",
            "title": "log_path",
            "description": "Path relative to PodSandboxConfig.LogDirectory for container to store\n the log (STDOUT and STDERR) on the host.\n E.g.,\n     PodSandboxConfig.LogDirectory = `/var/log/pods/\u003cNAMESPACE\u003e_\u003cNAME\u003e_\u003cUID\u003e/`\n     ContainerConfig.LogPath = `containerName/Instance#.log`"
          },
          "stdin": {
            "type": "boolean",
            "title": "stdin",
            "description": "Variables for interactive containers, these have very specialized\n use-cases (e.g. debugging)."
          },
          "stdinOnce": {
            "type": "boolean",
            "title": "stdin_once"
          },
          "tty": {
            "type": "boolean",
            "title": "tty"
          },
          "linux": {
            "title": "linux",
            "description": "Configuration specific to Linux containers.",
            "$ref": "#/components/schemas/runtime.v1.LinuxContainerConfig"
          },
          "windows": {
            "title": "windows",
            "description": "Configuration specific to Windows containers.",
            "$ref": "#/components/schemas/runtime.v1.WindowsContainerConfig"
          },
          "CDIDevices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.CDIDevice"
            },
            "title": "CDI_devices",
            "description": "CDI devices for the container."
          },
          "stopSignal": {
            "title": "stop_signal",
            "description": "The custom stop signal for the container",
            "$ref": "#/components/schemas/runtime.v1.Signal"
          }
        },
        "title": "ContainerConfig",
        "additionalProperties": false,
        "description": "ContainerConfig holds all the required and optional fields for creating a\n container."
      },
      "runtime.v1.ContainerConfig.AnnotationsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "AnnotationsEntry",
        "additionalProperties": false
      },
      "runtime.v1.ContainerConfig.LabelsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "LabelsEntry",
        "additionalProperties": false
      },
      "runtime.v1.ContainerEventResponse": {
        "type": "object",
        "properties": {
          "containerId": {
            "type": "string",
            "title": "container_id",
            "description": "ID of the container"
          },
          "containerEventType": {
            "title": "container_event_type",
            "description": "Type of the container event",
            "$ref": "#/components/schemas/runtime.v1.ContainerEventType"
          },
          "createdAt": {
            "type": [
              "integer",
              "string"
            ],
            "title": "created_at",
            "format": "int64",
            "description": "Creation timestamp in nanoseconds of this event"
          },
          "podSandboxStatus": {
            "title": "pod_sandbox_status",
            "description": "Sandbox status",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxStatus"
          },
          "containersStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.ContainerStatus"
            },
            "title": "containers_statuses",
            "description": "Container statuses"
          }
        },
        "title": "ContainerEventResponse",
        "additionalProperties": false
      },
      "runtime.v1.ContainerEventType": {
        "type": "string",
        "title": "ContainerEventType",
        "enum": [
          "CONTAINER_CREATED_EVENT",
          "CONTAINER_STARTED_EVENT",
          "CONTAINER_STOPPED_EVENT",
          "CONTAINER_DELETED_EVENT"
        ]
      },
      "runtime.v1.ContainerFilter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "ID of the container."
          },
          "state": {
            "title": "state",
            "description": "State of the container.",
            "$ref": "#/components/schemas/runtime.v1.ContainerStateValue"
          },
          "podSandboxId": {
            "type": "string",
            "title": "pod_sandbox_id",
            "description": "ID of the PodSandbox."
          },
          "labelSelector": {
            "type": "object",
            "title": "label_selector",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "LabelSelector to select matches.\n Only api.MatchLabels is supported for now and the requirements\n are ANDed. MatchExpressions is not supported yet."
          }
        },
        "title": "ContainerFilter",
        "additionalProperties": false,
        "description": "ContainerFilter is used to filter containers.\n All those fields are combined with 'AND'"
      },
      "runtime.v1.ContainerFilter.LabelSelectorEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "LabelSelectorEntry",
        "additionalProperties": false
      },
      "runtime.v1.ContainerMetadata": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "Name of the container. Same as the container name in the PodSpec."
          },
          "attempt": {
            "type": "integer",
            "title": "attempt",
            "description": "Attempt number of creating the container. Default: 0."
          }
        },
        "title": "ContainerMetadata",
        "additionalProperties": false,
        "description": "ContainerMetadata holds all necessary information for building the container\n name. The container runtime is encouraged to expose the metadata in its user\n interface for better user experience. E.g., runtime can construct a unique\n container name based on the metadata. Note that (name, attempt) is unique\n within a sandbox for the entire lifetime of the sandbox."
      },
      "runtime.v1.ContainerMetrics": {
        "type": "object",
        "properties": {
          "containerId": {
            "type": "string",
            "title": "container_id"
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.Metric"
            },
            "title": "metrics"
          }
        },
        "title": "ContainerMetrics",
        "additionalProperties": false
      },
      "runtime.v1.ContainerResources": {
        "type": "object",
        "properties": {
          "linux": {
            "title": "linux",
            "description": "Resource limits configuration specific to Linux container.",
            "$ref": "#/components/schemas/runtime.v1.LinuxContainerResources"
          },
          "windows": {
            "title": "windows",
            "description": "Resource limits configuration specific to Windows container.",
            "$ref": "#/components/schemas/runtime.v1.WindowsContainerResources"
          }
        },
        "title": "ContainerResources",
        "additionalProperties": false,
        "description": "ContainerResources holds resource limits configuration for a container."
      },
      "runtime.v1.ContainerState": {
        "type": "string",
        "title": "ContainerState",
        "enum": [
          "CONTAINER_CREATED",
          "CONTAINER_RUNNING",
          "CONTAINER_EXITED",
          "CONTAINER_UNKNOWN"
        ]
      },
      "runtime.v1.ContainerStateValue": {
        "type": "object",
        "properties": {
          "state": {
            "title": "state",
            "description": "State of the container.",
            "$ref": "#/components/schemas/runtime.v1.ContainerState"
          }
        },
        "title": "ContainerStateValue",
        "additionalProperties": false,
        "description": "ContainerStateValue is the wrapper of ContainerState."
      },
      "runtime.v1.ContainerStats": {
        "type": "object",
        "properties": {
          "attributes": {
            "title": "attributes",
            "description": "Information of the container.",
            "$ref": "#/components/schemas/runtime.v1.ContainerAttributes"
          },
          "cpu": {
            "title": "cpu",
            "description": "CPU usage gathered from the container.",
            "$ref": "#/components/schemas/runtime.v1.CpuUsage"
          },
          "memory": {
            "title": "memory",
            "description": "Memory usage gathered from the container.",
            "$ref": "#/components/schemas/runtime.v1.MemoryUsage"
          },
          "writableLayer": {
            "title": "writable_layer",
            "description": "Usage of the writable layer.",
            "$ref": "#/components/schemas/runtime.v1.FilesystemUsage"
          },
          "swap": {
            "title": "swap",
            "description": "Swap usage gathered from the container.",
            "$ref": "#/components/schemas/runtime.v1.SwapUsage"
          },
          "io": {
            "title": "io",
            "description": "IO usage gathered from the container.",
            "$ref": "#/components/schemas/runtime.v1.IoUsage"
          }
        },
        "title": "ContainerStats",
        "additionalProperties": false,
        "description": "ContainerStats provides the resource usage statistics for a container."
      },
      "runtime.v1.ContainerStatsFilter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "ID of the container."
          },
          "podSandboxId": {
            "type": "string",
            "title": "pod_sandbox_id",
            "description": "ID of the PodSandbox."
          },
          "labelSelector": {
            "type": "object",
            "title": "label_selector",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "LabelSelector to select matches.\n Only api.MatchLabels is supported for now and the requirements\n are ANDed. MatchExpressions is not supported yet."
          }
        },
        "title": "ContainerStatsFilter",
        "additionalProperties": false,
        "description": "ContainerStatsFilter is used to filter containers.\n All those fields are combined with 'AND'"
      },
      "runtime.v1.ContainerStatsFilter.LabelSelectorEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "LabelSelectorEntry",
        "additionalProperties": false
      },
      "runtime.v1.ContainerStatsRequest": {
        "type": "object",
        "properties": {
          "containerId": {
            "type": "string",
            "title": "container_id",
            "description": "ID of the container for which to retrieve stats."
          }
        },
        "title": "ContainerStatsRequest",
        "additionalProperties": false
      },
      "runtime.v1.ContainerStatsResponse": {
        "type": "object",
        "properties": {
          "stats": {
            "title": "stats",
            "description": "Stats of the container.",
            "$ref": "#/components/schemas/runtime.v1.ContainerStats"
          }
        },
        "title": "ContainerStatsResponse",
        "additionalProperties": false
      },
      "runtime.v1.ContainerStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "ID of the container."
          },
          "metadata": {
            "title": "metadata",
            "description": "Metadata of the container.",
            "$ref": "#/components/schemas/runtime.v1.ContainerMetadata"
          },
          "state": {
            "title": "state",
            "description": "Status of the container.",
            "$ref": "#/components/schemas/runtime.v1.ContainerState"
          },
          "createdAt": {
            "type": [
              "integer",
              "string"
            ],
            "title": "created_at",
            "format": "int64",
            "description": "Creation time of the container in nanoseconds."
          },
          "startedAt": {
            "type": [
              "integer",
              "string"
            ],
            "title": "started_at",
            "format": "int64",
            "description": "Start time of the container in nanoseconds. Default: 0 (not specified)."
          },
          "finishedAt": {
            "type": [
              "integer",
              "string"
            ],
            "title": "finished_at",
            "format": "int64",
            "description": "Finish time of the container in nanoseconds. Default: 0 (not specified)."
          },
          "exitCode": {
            "type": "integer",
            "title": "exit_code",
            "format": "int32",
            "description": "Exit code of the container. Only required when finished_at != 0. Default: 0."
          },
          "image": {
            "title": "image",
            "description": "Spec of the image.",
            "$ref": "#/components/schemas/runtime.v1.ImageSpec"
          },
          "imageRef": {
            "type": "string",
            "title": "image_ref",
            "description": "Digested reference to the image in use."
          },
          "reason": {
            "type": "string",
            "title": "reason",
            "description": "Brief CamelCase string explaining why container is in its current state.\n Must be set to \"OOMKilled\" for containers terminated by cgroup-based Out-of-Memory killer."
          },
          "message": {
            "type": "string",
            "title": "message",
            "description": "Human-readable message indicating details about why container is in its\n current state."
          },
          "labels": {
            "type": "object",
            "title": "labels",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Key-value pairs that may be used to scope and select individual resources."
          },
          "annotations": {
            "type": "object",
            "title": "annotations",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Unstructured key-value map holding arbitrary metadata.\n Annotations MUST NOT be altered by the runtime; the value of this field\n MUST be identical to that of the corresponding ContainerConfig used to\n instantiate the Container this status represents."
          },
          "mounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.Mount"
            },
            "title": "mounts",
            "description": "Mounts for the container."
          },
          "logPath": {
            "type": "string",
            "title": "log_path",
            "description": "Log path of container."
          },
          "resources": {
            "title": "resources",
            "description": "Resource limits configuration of the container.",
            "$ref": "#/components/schemas/runtime.v1.ContainerResources"
          },
          "imageId": {
            "type": "string",
            "title": "image_id",
            "description": "Reference to the unique identifier of the image, on the node, as\n returned in the image service apis.\n\n Note: The image_ref above has been historically used by container\n runtimes to reference images by digest. To separate and avoid possible\n misusage, we now introduce the image_id field, which should always refer\n to a unique image identifier on the node."
          },
          "user": {
            "title": "user",
            "description": "User identities initially attached to the container",
            "$ref": "#/components/schemas/runtime.v1.ContainerUser"
          },
          "stopSignal": {
            "title": "stop_signal",
            "description": "Returns the stop signal used by the container runtime to terminate the container",
            "$ref": "#/components/schemas/runtime.v1.Signal"
          }
        },
        "title": "ContainerStatus",
        "additionalProperties": false,
        "description": "ContainerStatus represents the status of a container."
      },
      "runtime.v1.ContainerStatus.AnnotationsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "AnnotationsEntry",
        "additionalProperties": false
      },
      "runtime.v1.ContainerStatus.LabelsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "LabelsEntry",
        "additionalProperties": false
      },
      "runtime.v1.ContainerStatusRequest": {
        "type": "object",
        "properties": {
          "containerId": {
            "type": "string",
            "title": "container_id",
            "description": "ID of the container for which to retrieve status."
          },
          "verbose": {
            "type": "boolean",
            "title": "verbose",
            "description": "Verbose indicates whether to return extra information about the container."
          }
        },
        "title": "ContainerStatusRequest",
        "additionalProperties": false
      },
      "runtime.v1.ContainerStatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "title": "status",
            "description": "Status of the container.",
            "$ref": "#/components/schemas/runtime.v1.ContainerStatus"
          },
          "info": {
            "type": "object",
            "title": "info",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Info is extra information of the Container. The key could be arbitrary string, and\n value should be in json format. The information could include anything useful for\n debug, e.g. pid for linux container based container runtime.\n It should only be returned non-empty when Verbose is true."
          }
        },
        "title": "ContainerStatusResponse",
        "additionalProperties": false
      },
      "runtime.v1.ContainerStatusResponse.InfoEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "InfoEntry",
        "additionalProperties": false
      },
      "runtime.v1.ContainerUser": {
        "type": "object",
        "properties": {
          "linux": {
            "title": "linux",
            "description": "User identities initially attached to first process in the Linux container.\n Note that the actual running identity can be changed if the process has enough privilege to do so.",
            "$ref": "#/components/schemas/runtime.v1.LinuxContainerUser"
          }
        },
        "title": "ContainerUser",
        "additionalProperties": false
      },
      "runtime.v1.CpuUsage": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timestamp",
            "format": "int64",
            "description": "Timestamp in nanoseconds at which the information were collected. Must be \u003e 0."
          },
          "usageCoreNanoSeconds": {
            "title": "usage_core_nano_seconds",
            "description": "Cumulative CPU usage (sum across all cores) since object creation.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "usageNanoCores": {
            "title": "usage_nano_cores",
            "description": "Total CPU usage (sum of all cores) averaged over the sample window.\n The \"core\" unit can be interpreted as CPU core-nanoseconds per second.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "psi": {
            "title": "psi",
            "description": "CPU PSI statistics.",
            "$ref": "#/components/schemas/runtime.v1.PsiStats"
          }
        },
        "title": "CpuUsage",
        "additionalProperties": false,
        "description": "CpuUsage provides the CPU usage information."
      },
      "runtime.v1.CreateContainerRequest": {
        "type": "object",
        "properties": {
          "podSandboxId": {
            "type": "string",
            "title": "pod_sandbox_id",
            "description": "ID of the PodSandbox in which the container should be created."
          },
          "config": {
            "title": "config",
            "description": "Config of the container.",
            "$ref": "#/components/schemas/runtime.v1.ContainerConfig"
          },
          "sandboxConfig": {
            "title": "sandbox_config",
            "description": "Config of the PodSandbox. This is the same config that was passed\n to RunPodSandboxRequest to create the PodSandbox. It is passed again\n here just for easy reference. The PodSandboxConfig is immutable and\n remains the same throughout the lifetime of the pod.",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxConfig"
          }
        },
        "title": "CreateContainerRequest",
        "additionalProperties": false
      },
      "runtime.v1.CreateContainerResponse": {
        "type": "object",
        "properties": {
          "containerId": {
            "type": "string",
            "title": "container_id",
            "description": "ID of the created container."
          }
        },
        "title": "CreateContainerResponse",
        "additionalProperties": false
      },
      "runtime.v1.DNSConfig": {
        "type": "object",
        "properties": {
          "servers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "servers",
            "description": "List of DNS servers of the cluster."
          },
          "searches": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "searches",
            "description": "List of DNS search domains of the cluster."
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "options",
            "description": "List of DNS options. See https://linux.die.net/man/5/resolv.conf\n for all available options."
          }
        },
        "title": "DNSConfig",
        "additionalProperties": false,
        "description": "DNSConfig specifies the DNS servers and search domains of a sandbox."
      },
      "runtime.v1.Device": {
        "type": "object",
        "properties": {
          "containerPath": {
            "type": "string",
            "title": "container_path",
            "description": "Path of the device within the container."
          },
          "hostPath": {
            "type": "string",
            "title": "host_path",
            "description": "Path of the device on the host."
          },
          "permissions": {
            "type": "string",
            "title": "permissions",
            "description": "Cgroups permissions of the device, candidates are one or more of\n * r - allows container to read from the specified device.\n * w - allows container to write to the specified device.\n * m - allows container to create device files that do not yet exist."
          }
        },
        "title": "Device",
        "additionalProperties": false,
        "description": "Device specifies a host device to mount into a container."
      },
      "runtime.v1.ExecRequest": {
        "type": "object",
        "properties": {
          "containerId": {
            "type": "string",
            "title": "container_id",
            "description": "ID of the container in which to execute the command."
          },
          "cmd": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "cmd",
            "description": "Command to execute."
          },
          "tty": {
            "type": "boolean",
            "title": "tty",
            "description": "Whether to exec the command in a TTY."
          },
          "stdin": {
            "type": "boolean",
            "title": "stdin",
            "description": "Whether to stream stdin.\n One of `stdin`, `stdout`, and `stderr` MUST be true."
          },
          "stdout": {
            "type": "boolean",
            "title": "stdout",
            "description": "Whether to stream stdout.\n One of `stdin`, `stdout`, and `stderr` MUST be true."
          },
          "stderr": {
            "type": "boolean",
            "title": "stderr",
            "description": "Whether to stream stderr.\n One of `stdin`, `stdout`, and `stderr` MUST be true.\n If `tty` is true, `stderr` MUST be false. Multiplexing is not supported\n in this case. The output of stdout and stderr will be combined to a\n single stream."
          }
        },
        "title": "ExecRequest",
        "additionalProperties": false
      },
      "runtime.v1.ExecResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "title": "url",
            "description": "Fully qualified URL of the exec streaming server."
          }
        },
        "title": "ExecResponse",
        "additionalProperties": false
      },
      "runtime.v1.ExecSyncRequest": {
        "type": "object",
        "properties": {
          "containerId": {
            "type": "string",
            "title": "container_id",
            "description": "ID of the container."
          },
          "cmd": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "cmd",
            "description": "Command to execute."
          },
          "timeout": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timeout",
            "format": "int64",
            "description": "Timeout in seconds to stop the command. Default: 0 (run forever)."
          }
        },
        "title": "ExecSyncRequest",
        "additionalProperties": false
      },
      "runtime.v1.ExecSyncResponse": {
        "type": "object",
        "properties": {
          "stdout": {
            "type": "string",
            "title": "stdout",
            "format": "byte",
            "description": "Captured command stdout output.\n The runtime should cap the output of this response to 16MB.\n If the stdout of the command produces more than 16MB, the remaining output\n should be discarded, and the command should proceed with no error.\n See CVE-2022-1708 and CVE-2022-31030 for more information."
          },
          "stderr": {
            "type": "string",
            "title": "stderr",
            "format": "byte",
            "description": "Captured command stderr output.\n The runtime should cap the output of this response to 16MB.\n If the stderr of the command produces more than 16MB, the remaining output\n should be discarded, and the command should proceed with no error.\n See CVE-2022-1708 and CVE-2022-31030 for more information."
          },
          "exitCode": {
            "type": "integer",
            "title": "exit_code",
            "format": "int32",
            "description": "Exit code the command finished with. Default: 0 (success)."
          }
        },
        "title": "ExecSyncResponse",
        "additionalProperties": false
      },
      "runtime.v1.FilesystemIdentifier": {
        "type": "object",
        "properties": {
          "mountpoint": {
            "type": "string",
            "title": "mountpoint",
            "description": "Mountpoint of a filesystem."
          }
        },
        "title": "FilesystemIdentifier",
        "additionalProperties": false,
        "description": "FilesystemIdentifier uniquely identify the filesystem."
      },
      "runtime.v1.FilesystemUsage": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timestamp",
            "format": "int64",
            "description": "Timestamp in nanoseconds at which the information were collected. Must be \u003e 0."
          },
          "fsId": {
            "title": "fs_id",
            "description": "The unique identifier of the filesystem.",
            "$ref": "#/components/schemas/runtime.v1.FilesystemIdentifier"
          },
          "usedBytes": {
            "title": "used_bytes",
            "description": "UsedBytes represents the bytes used for images on the filesystem.\n This may differ from the total bytes used on the filesystem and may not\n equal CapacityBytes - AvailableBytes.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "inodesUsed": {
            "title": "inodes_used",
            "description": "InodesUsed represents the inodes used by the images.\n This may not equal InodesCapacity - InodesAvailable because the underlying\n filesystem may also be used for purposes other than storing images.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          }
        },
        "title": "FilesystemUsage",
        "additionalProperties": false,
        "description": "FilesystemUsage provides the filesystem usage information."
      },
      "runtime.v1.GetEventsRequest": {
        "type": "object",
        "title": "GetEventsRequest",
        "additionalProperties": false
      },
      "runtime.v1.HugepageLimit": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "string",
            "title": "page_size",
            "description": "The value of PageSize has the format \u003csize\u003e\u003cunit-prefix\u003eB (2MB, 1GB),\n and must match the \u003chugepagesize\u003e of the corresponding control file found in `hugetlb.\u003chugepagesize\u003e.limit_in_bytes`.\n The values of \u003cunit-prefix\u003e are intended to be parsed using base 1024(\"1KB\" = 1024, \"1MB\" = 1048576, etc)."
          },
          "limit": {
            "type": [
              "integer",
              "string"
            ],
            "title": "limit",
            "format": "int64",
            "description": "limit in bytes of hugepagesize HugeTLB usage."
          }
        },
        "title": "HugepageLimit",
        "additionalProperties": false,
        "description": "HugepageLimit corresponds to the file`hugetlb.\u003chugepagesize\u003e.limit_in_byte` in container level cgroup.\n For example, `PageSize=1GB`, `Limit=1073741824` means setting `1073741824` bytes to hugetlb.1GB.limit_in_bytes."
      },
      "runtime.v1.IDMapping": {
        "type": "object",
        "properties": {
          "hostId": {
            "type": "integer",
            "title": "host_id",
            "description": "HostId is the id on the host."
          },
          "containerId": {
            "type": "integer",
            "title": "container_id",
            "description": "ContainerId is the id in the container."
          },
          "length": {
            "type": "integer",
            "title": "length",
            "description": "Length is the size of the range to map."
          }
        },
        "title": "IDMapping",
        "additionalProperties": false,
        "description": "IDMapping describes host to container ID mappings for a pod sandbox."
      },
      "runtime.v1.Image": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "ID of the image."
          },
          "repoTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "repo_tags",
            "description": "Other names by which this image is known."
          },
          "repoDigests": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "repo_digests",
            "description": "Digests by which this image is known."
          },
          "size": {
            "type": [
              "integer",
              "string"
            ],
            "title": "size",
            "format": "int64",
            "description": "Size of the image in bytes. Must be \u003e 0."
          },
          "uid": {
            "title": "uid",
            "description": "UID that will run the command(s). This is used as a default if no user is\n specified when creating the container. UID and the following user name\n are mutually exclusive.",
            "$ref": "#/components/schemas/runtime.v1.Int64Value"
          },
          "username": {
            "type": "string",
            "title": "username",
            "description": "User name that will run the command(s). This is used if UID is not set\n and no user is specified when creating container."
          },
          "spec": {
            "title": "spec",
            "description": "ImageSpec for image which includes annotations",
            "$ref": "#/components/schemas/runtime.v1.ImageSpec"
          },
          "pinned": {
            "type": "boolean",
            "title": "pinned",
            "description": "Recommendation on whether this image should be exempt from garbage collection.\n It must only be treated as a recommendation -- the client can still request that the image be deleted,\n and the runtime must oblige."
          }
        },
        "title": "Image",
        "additionalProperties": false,
        "description": "Basic information about a container image."
      },
      "runtime.v1.ImageFilter": {
        "type": "object",
        "properties": {
          "image": {
            "title": "image",
            "description": "Spec of the image.",
            "$ref": "#/components/schemas/runtime.v1.ImageSpec"
          }
        },
        "title": "ImageFilter",
        "additionalProperties": false
      },
      "runtime.v1.ImageFsInfoRequest": {
        "type": "object",
        "title": "ImageFsInfoRequest",
        "additionalProperties": false
      },
      "runtime.v1.ImageFsInfoResponse": {
        "type": "object",
        "properties": {
          "imageFilesystems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.FilesystemUsage"
            },
            "title": "image_filesystems",
            "description": "Information of image filesystem(s)."
          },
          "containerFilesystems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.FilesystemUsage"
            },
            "title": "container_filesystems",
            "description": "Information of container filesystem(s).\n This is an optional field, may be used for example if container and image\n storage are separated.\n Default will be to return this as empty."
          }
        },
        "title": "ImageFsInfoResponse",
        "additionalProperties": false
      },
      "runtime.v1.ImageSpec": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "title": "image",
            "description": "Container's Image field (e.g. imageID or imageDigest)."
          },
          "annotations": {
            "type": "object",
            "title": "annotations",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Unstructured key-value map holding arbitrary metadata.\n ImageSpec Annotations can be used to help the runtime target specific\n images in multi-arch images."
          },
          "userSpecifiedImage": {
            "type": "string",
            "title": "user_specified_image",
            "description": "The container image reference specified by the user (e.g. image[:tag] or digest).\n Only set if available within the RPC context."
          },
          "runtimeHandler": {
            "type": "string",
            "title": "runtime_handler",
            "description": "Runtime handler to use for pulling the image.\n If the runtime handler is unknown, the request should be rejected.\n An empty string would select the default runtime handler."
          }
        },
        "title": "ImageSpec",
        "additionalProperties": false,
        "description": "ImageSpec is an internal representation of an image."
      },
      "runtime.v1.ImageSpec.AnnotationsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "AnnotationsEntry",
        "additionalProperties": false
      },
      "runtime.v1.ImageStatusRequest": {
        "type": "object",
        "properties": {
          "image": {
            "title": "image",
            "description": "Spec of the image.",
            "$ref": "#/components/schemas/runtime.v1.ImageSpec"
          },
          "verbose": {
            "type": "boolean",
            "title": "verbose",
            "description": "Verbose indicates whether to return extra information about the image."
          }
        },
        "title": "ImageStatusRequest",
        "additionalProperties": false
      },
      "runtime.v1.ImageStatusResponse": {
        "type": "object",
        "properties": {
          "image": {
            "title": "image",
            "description": "Status of the image.",
            "$ref": "#/components/schemas/runtime.v1.Image"
          },
          "info": {
            "type": "object",
            "title": "info",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Info is extra information of the Image. The key could be arbitrary string, and\n value should be in json format. The information could include anything useful\n for debug, e.g. image config for oci image based container runtime.\n It should only be returned non-empty when Verbose is true."
          }
        },
        "title": "ImageStatusResponse",
        "additionalProperties": false
      },
      "runtime.v1.ImageStatusResponse.InfoEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "InfoEntry",
        "additionalProperties": false
      },
      "runtime.v1.Int64Value": {
        "type": "object",
        "properties": {
          "value": {
            "type": [
              "integer",
              "string"
            ],
            "title": "value",
            "format": "int64",
            "description": "The value."
          }
        },
        "title": "Int64Value",
        "additionalProperties": false,
        "description": "Int64Value is the wrapper of int64."
      },
      "runtime.v1.IoUsage": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timestamp",
            "format": "int64",
            "description": "Timestamp in nanoseconds at which the information were collected. Must be \u003e 0."
          },
          "psi": {
            "title": "psi",
            "description": "IO PSI statistics.",
            "$ref": "#/components/schemas/runtime.v1.PsiStats"
          }
        },
        "title": "IoUsage",
        "additionalProperties": false
      },
      "runtime.v1.KeyValue": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "KeyValue",
        "additionalProperties": false
      },
      "runtime.v1.LinuxContainerConfig": {
        "type": "object",
        "properties": {
          "resources": {
            "title": "resources",
            "description": "Resources specification for the container.",
            "$ref": "#/components/schemas/runtime.v1.LinuxContainerResources"
          },
          "securityContext": {
            "title": "security_context",
            "description": "LinuxContainerSecurityContext configuration for the container.",
            "$ref": "#/components/schemas/runtime.v1.LinuxContainerSecurityContext"
          }
        },
        "title": "LinuxContainerConfig",
        "additionalProperties": false,
        "description": "LinuxContainerConfig contains platform-specific configuration for\n Linux-based containers."
      },
      "runtime.v1.LinuxContainerResources": {
        "type": "object",
        "properties": {
          "cpuPeriod": {
            "type": [
              "integer",
              "string"
            ],
            "title": "cpu_period",
            "format": "int64",
            "description": "CPU CFS (Completely Fair Scheduler) period. Default: 0 (not specified)."
          },
          "cpuQuota": {
            "type": [
              "integer",
              "string"
            ],
            "title": "cpu_quota",
            "format": "int64",
            "description": "CPU CFS (Completely Fair Scheduler) quota. Default: 0 (not specified)."
          },
          "cpuShares": {
            "type": [
              "integer",
              "string"
            ],
            "title": "cpu_shares",
            "format": "int64",
            "description": "CPU shares (relative weight vs. other containers). Default: 0 (not specified)."
          },
          "memoryLimitInBytes": {
            "type": [
              "integer",
              "string"
            ],
            "title": "memory_limit_in_bytes",
            "format": "int64",
            "description": "Memory limit in bytes. Default: 0 (not specified)."
          },
          "oomScoreAdj": {
            "type": [
              "integer",
              "string"
            ],
            "title": "oom_score_adj",
            "format": "int64",
            "description": "OOMScoreAdj adjusts the oom-killer score. Default: 0 (not specified)."
          },
          "cpusetCpus": {
            "type": "string",
            "title": "cpuset_cpus",
            "description": "CpusetCpus constrains the allowed set of logical CPUs. Default: \"\" (not specified)."
          },
          "cpusetMems": {
            "type": "string",
            "title": "cpuset_mems",
            "description": "CpusetMems constrains the allowed set of memory nodes. Default: \"\" (not specified)."
          },
          "hugepageLimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.HugepageLimit"
            },
            "title": "hugepage_limits",
            "description": "List of HugepageLimits to limit the HugeTLB usage of container per page size. Default: nil (not specified)."
          },
          "unified": {
            "type": "object",
            "title": "unified",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Unified resources for cgroup v2. Default: nil (not specified).\n Each key/value in the map refers to the cgroup v2.\n e.g. \"memory.max\": \"6937202688\" or \"io.weight\": \"default 100\"."
          },
          "memorySwapLimitInBytes": {
            "type": [
              "integer",
              "string"
            ],
            "title": "memory_swap_limit_in_bytes",
            "format": "int64",
            "description": "Memory swap limit in bytes. Default 0 (not specified)."
          }
        },
        "title": "LinuxContainerResources",
        "additionalProperties": false,
        "description": "LinuxContainerResources specifies Linux specific configuration for\n resources."
      },
      "runtime.v1.LinuxContainerResources.UnifiedEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "UnifiedEntry",
        "additionalProperties": false
      },
      "runtime.v1.LinuxContainerSecurityContext": {
        "type": "object",
        "properties": {
          "capabilities": {
            "title": "capabilities",
            "description": "Capabilities to add or drop.",
            "$ref": "#/components/schemas/runtime.v1.Capability"
          },
          "privileged": {
            "type": "boolean",
            "title": "privileged",
            "description": "If set, run container in privileged mode.\n Privileged mode is incompatible with the following options. If\n privileged is set, the following features MAY have no effect:\n 1. capabilities\n 2. selinux_options\n 4. seccomp\n 5. apparmor\n\n Privileged mode implies the following specific options are applied:\n 1. All capabilities are added.\n 2. Sensitive paths, such as kernel module paths within sysfs, are not masked.\n 3. Any sysfs and procfs mounts are mounted RW.\n 4. AppArmor confinement is not applied.\n 5. Seccomp restrictions are not applied.\n 6. The device cgroup does not restrict access to any devices.\n 7. All devices from the host's /dev are available within the container.\n 8. SELinux restrictions are not applied (e.g. label=disabled)."
          },
          "namespaceOptions": {
            "title": "namespace_options",
            "description": "Configurations for the container's namespaces.\n Only used if the container uses namespace for isolation.",
            "$ref": "#/components/schemas/runtime.v1.NamespaceOption"
          },
          "selinuxOptions": {
            "title": "selinux_options",
            "description": "SELinux context to be optionally applied.",
            "$ref": "#/components/schemas/runtime.v1.SELinuxOption"
          },
          "runAsUser": {
            "title": "run_as_user",
            "description": "UID to run the container process as. Only one of run_as_user and\n run_as_username can be specified at a time.",
            "$ref": "#/components/schemas/runtime.v1.Int64Value"
          },
          "runAsGroup": {
            "title": "run_as_group",
            "description": "GID to run the container process as. run_as_group should only be specified\n when run_as_user or run_as_username is specified; otherwise, the runtime\n MUST error.",
            "$ref": "#/components/schemas/runtime.v1.Int64Value"
          },
          "runAsUsername": {
            "type": "string",
            "title": "run_as_username",
            "description": "User name to run the container process as. If specified, the user MUST\n exist in the container image (i.e. in the /etc/passwd inside the image),\n and be resolved there by the runtime; otherwise, the runtime MUST error."
          },
          "readonlyRootfs": {
            "type": "boolean",
            "title": "readonly_rootfs",
            "description": "If set, the root filesystem of the container is read-only."
          },
          "supplementalGroups": {
            "type": "array",
            "items": {
              "type": [
                "integer",
                "string"
              ],
              "format": "int64"
            },
            "title": "supplemental_groups",
            "description": "List of groups applied to the first process run in each container.\n supplemental_groups_policy can control how groups will be calculated."
          },
          "supplementalGroupsPolicy": {
            "title": "supplemental_groups_policy",
            "description": "supplemental_groups_policy defines how supplemental groups of the first \n container processes are calculated.\n Valid values are \"Merge\" and \"Strict\".\n If not specified, \"Merge\" is used.",
            "$ref": "#/components/schemas/runtime.v1.SupplementalGroupsPolicy"
          },
          "noNewPrivs": {
            "type": "boolean",
            "title": "no_new_privs",
            "description": "no_new_privs defines if the flag for no_new_privs should be set on the\n container."
          },
          "maskedPaths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "masked_paths",
            "description": "masked_paths is a slice of paths that should be masked by the container\n runtime, this can be passed directly to the OCI spec."
          },
          "readonlyPaths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "readonly_paths",
            "description": "readonly_paths is a slice of paths that should be set as readonly by the\n container runtime, this can be passed directly to the OCI spec."
          },
          "seccomp": {
            "title": "seccomp",
            "description": "Seccomp profile for the container.",
            "$ref": "#/components/schemas/runtime.v1.SecurityProfile"
          },
          "apparmor": {
            "title": "apparmor",
            "description": "AppArmor profile for the container.",
            "$ref": "#/components/schemas/runtime.v1.SecurityProfile"
          },
          "apparmorProfile": {
            "type": "string",
            "title": "apparmor_profile",
            "description": "AppArmor profile for the container, candidate values are:\n * runtime/default: equivalent to not specifying a profile.\n * unconfined: no profiles are loaded\n * localhost/\u003cprofile_name\u003e: profile loaded on the node\n    (localhost) by name. The possible profile names are detailed at\n    https://gitlab.com/apparmor/apparmor/-/wikis/AppArmor_Core_Policy_Reference",
            "deprecated": true
          },
          "seccompProfilePath": {
            "type": "string",
            "title": "seccomp_profile_path",
            "description": "Seccomp profile for the container, candidate values are:\n * runtime/default: the default profile for the container runtime\n * unconfined: unconfined profile, ie, no seccomp sandboxing\n * localhost/\u003cfull-path-to-profile\u003e: the profile installed on the node.\n   \u003cfull-path-to-profile\u003e is the full path of the profile.\n Default: \"\", which is identical with unconfined.",
            "deprecated": true
          }
        },
        "title": "LinuxContainerSecurityContext",
        "additionalProperties": false,
        "description": "LinuxContainerSecurityContext holds linux security configuration that will be applied to a container."
      },
      "runtime.v1.LinuxContainerUser": {
        "type": "object",
        "properties": {
          "uid": {
            "type": [
              "integer",
              "string"
            ],
            "title": "uid",
            "format": "int64",
            "description": "uid is the primary uid initially attached to the first process in the container"
          },
          "gid": {
            "type": [
              "integer",
              "string"
            ],
            "title": "gid",
            "format": "int64",
            "description": "gid is the primary gid initially attached to the first process in the container"
          },
          "supplementalGroups": {
            "type": "array",
            "items": {
              "type": [
                "integer",
                "string"
              ],
              "format": "int64"
            },
            "title": "supplemental_groups",
            "description": "supplemental_groups are the supplemental groups initially attached to the first process in the container"
          }
        },
        "title": "LinuxContainerUser",
        "additionalProperties": false
      },
      "runtime.v1.LinuxPodSandboxConfig": {
        "type": "object",
        "properties": {
          "cgroupParent": {
            "type": "string",
            "title": "cgroup_parent",
            "description": "Parent cgroup of the PodSandbox.\n The cgroupfs style syntax will be used, but the container runtime can\n convert it to systemd semantics if needed."
          },
          "securityContext": {
            "title": "security_context",
            "description": "LinuxSandboxSecurityContext holds sandbox security attributes.",
            "$ref": "#/components/schemas/runtime.v1.LinuxSandboxSecurityContext"
          },
          "sysctls": {
            "type": "object",
            "title": "sysctls",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Sysctls holds linux sysctls config for the sandbox."
          },
          "overhead": {
            "title": "overhead",
            "description": "Optional overhead represents the overheads associated with this sandbox",
            "$ref": "#/components/schemas/runtime.v1.LinuxContainerResources"
          },
          "resources": {
            "title": "resources",
            "description": "Optional resources represents the sum of container resources for this sandbox",
            "$ref": "#/components/schemas/runtime.v1.LinuxContainerResources"
          }
        },
        "title": "LinuxPodSandboxConfig",
        "additionalProperties": false,
        "description": "LinuxPodSandboxConfig holds platform-specific configurations for Linux\n host platforms and Linux-based containers."
      },
      "runtime.v1.LinuxPodSandboxConfig.SysctlsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "SysctlsEntry",
        "additionalProperties": false
      },
      "runtime.v1.LinuxPodSandboxStats": {
        "type": "object",
        "properties": {
          "cpu": {
            "title": "cpu",
            "description": "CPU usage gathered for the pod sandbox.",
            "$ref": "#/components/schemas/runtime.v1.CpuUsage"
          },
          "memory": {
            "title": "memory",
            "description": "Memory usage gathered for the pod sandbox.",
            "$ref": "#/components/schemas/runtime.v1.MemoryUsage"
          },
          "network": {
            "title": "network",
            "description": "Network usage gathered for the pod sandbox",
            "$ref": "#/components/schemas/runtime.v1.NetworkUsage"
          },
          "process": {
            "title": "process",
            "description": "Stats pertaining to processes in the pod sandbox.",
            "$ref": "#/components/schemas/runtime.v1.ProcessUsage"
          },
          "containers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.ContainerStats"
            },
            "title": "containers",
            "description": "Stats of containers in the measured pod sandbox."
          },
          "io": {
            "title": "io",
            "description": "IO usage gathered for the pod sandbox.",
            "$ref": "#/components/schemas/runtime.v1.IoUsage"
          }
        },
        "title": "LinuxPodSandboxStats",
        "additionalProperties": false,
        "description": "LinuxPodSandboxStats provides the resource usage statistics for a pod sandbox on linux."
      },
      "runtime.v1.LinuxPodSandboxStatus": {
        "type": "object",
        "properties": {
          "namespaces": {
            "title": "namespaces",
            "description": "Paths to the sandbox's namespaces.",
            "$ref": "#/components/schemas/runtime.v1.Namespace"
          }
        },
        "title": "LinuxPodSandboxStatus",
        "additionalProperties": false,
        "description": "LinuxSandboxStatus contains status specific to Linux sandboxes."
      },
      "runtime.v1.LinuxRuntimeConfiguration": {
        "type": "object",
        "properties": {
          "cgroupDriver": {
            "title": "cgroup_driver",
            "description": "Cgroup driver to use\n Note: this field should not change for the lifecycle of the Kubelet,\n or while there are running containers.\n The Kubelet will not re-request this after startup, and will construct the cgroup\n hierarchy assuming it is static.\n If the runtime wishes to change this value, it must be accompanied by removal of\n all pods, and a restart of the Kubelet. The easiest way to do this is with a full node reboot.",
            "$ref": "#/components/schemas/runtime.v1.CgroupDriver"
          }
        },
        "title": "LinuxRuntimeConfiguration",
        "additionalProperties": false
      },
      "runtime.v1.LinuxSandboxSecurityContext": {
        "type": "object",
        "properties": {
          "namespaceOptions": {
            "title": "namespace_options",
            "description": "Configurations for the sandbox's namespaces.\n This will be used only if the PodSandbox uses namespace for isolation.",
            "$ref": "#/components/schemas/runtime.v1.NamespaceOption"
          },
          "selinuxOptions": {
            "title": "selinux_options",
            "description": "Optional SELinux context to be applied.",
            "$ref": "#/components/schemas/runtime.v1.SELinuxOption"
          },
          "runAsUser": {
            "title": "run_as_user",
            "description": "UID to run sandbox processes as, when applicable.",
            "$ref": "#/components/schemas/runtime.v1.Int64Value"
          },
          "runAsGroup": {
            "title": "run_as_group",
            "description": "GID to run sandbox processes as, when applicable. run_as_group should only\n be specified when run_as_user is specified; otherwise, the runtime MUST error.",
            "$ref": "#/components/schemas/runtime.v1.Int64Value"
          },
          "readonlyRootfs": {
            "type": "boolean",
            "title": "readonly_rootfs",
            "description": "If set, the root filesystem of the sandbox is read-only."
          },
          "supplementalGroups": {
            "type": "array",
            "items": {
              "type": [
                "integer",
                "string"
              ],
              "format": "int64"
            },
            "title": "supplemental_groups",
            "description": "List of groups applied to the first process run in each container.\n supplemental_groups_policy can control how groups will be calculated."
          },
          "supplementalGroupsPolicy": {
            "title": "supplemental_groups_policy",
            "description": "supplemental_groups_policy defines how supplemental groups of the first \n container processes are calculated.\n Valid values are \"Merge\" and \"Strict\".\n If not specified, \"Merge\" is used.",
            "$ref": "#/components/schemas/runtime.v1.SupplementalGroupsPolicy"
          },
          "privileged": {
            "type": "boolean",
            "title": "privileged",
            "description": "Indicates whether the sandbox will be asked to run a privileged\n container. If a privileged container is to be executed within it, this\n MUST be true.\n This allows a sandbox to take additional security precautions if no\n privileged containers are expected to be run."
          },
          "seccomp": {
            "title": "seccomp",
            "description": "Seccomp profile for the sandbox.",
            "$ref": "#/components/schemas/runtime.v1.SecurityProfile"
          },
          "apparmor": {
            "title": "apparmor",
            "description": "AppArmor profile for the sandbox.",
            "$ref": "#/components/schemas/runtime.v1.SecurityProfile"
          },
          "seccompProfilePath": {
            "type": "string",
            "title": "seccomp_profile_path",
            "description": "Seccomp profile for the sandbox, candidate values are:\n * runtime/default: the default profile for the container runtime\n * unconfined: unconfined profile, ie, no seccomp sandboxing\n * localhost/\u003cfull-path-to-profile\u003e: the profile installed on the node.\n   \u003cfull-path-to-profile\u003e is the full path of the profile.\n Default: \"\", which is identical with unconfined.",
            "deprecated": true
          }
        },
        "title": "LinuxSandboxSecurityContext",
        "additionalProperties": false,
        "description": "LinuxSandboxSecurityContext holds linux security configuration that will be\n applied to a sandbox. Note that:\n 1) It does not apply to containers in the pods.\n 2) It may not be applicable to a PodSandbox which does not contain any running\n    process."
      },
      "runtime.v1.ListContainerStatsRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "title": "filter",
            "description": "Filter for the list request.",
            "$ref": "#/components/schemas/runtime.v1.ContainerStatsFilter"
          }
        },
        "title": "ListContainerStatsRequest",
        "additionalProperties": false
      },
      "runtime.v1.ListContainerStatsResponse": {
        "type": "object",
        "properties": {
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.ContainerStats"
            },
            "title": "stats",
            "description": "Stats of the container."
          }
        },
        "title": "ListContainerStatsResponse",
        "additionalProperties": false
      },
      "runtime.v1.ListContainersRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "title": "filter",
            "$ref": "#/components/schemas/runtime.v1.ContainerFilter"
          }
        },
        "title": "ListContainersRequest",
        "additionalProperties": false
      },
      "runtime.v1.ListContainersResponse": {
        "type": "object",
        "properties": {
          "containers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.Container"
            },
            "title": "containers",
            "description": "List of containers."
          }
        },
        "title": "ListContainersResponse",
        "additionalProperties": false
      },
      "runtime.v1.ListImagesRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "title": "filter",
            "description": "Filter to list images.",
            "$ref": "#/components/schemas/runtime.v1.ImageFilter"
          }
        },
        "title": "ListImagesRequest",
        "additionalProperties": false
      },
      "runtime.v1.ListImagesResponse": {
        "type": "object",
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.Image"
            },
            "title": "images",
            "description": "List of images."
          }
        },
        "title": "ListImagesResponse",
        "additionalProperties": false
      },
      "runtime.v1.ListMetricDescriptorsRequest": {
        "type": "object",
        "title": "ListMetricDescriptorsRequest",
        "additionalProperties": false
      },
      "runtime.v1.ListMetricDescriptorsResponse": {
        "type": "object",
        "properties": {
          "descriptors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.MetricDescriptor"
            },
            "title": "descriptors"
          }
        },
        "title": "ListMetricDescriptorsResponse",
        "additionalProperties": false
      },
      "runtime.v1.ListPodSandboxMetricsRequest": {
        "type": "object",
        "title": "ListPodSandboxMetricsRequest",
        "additionalProperties": false
      },
      "runtime.v1.ListPodSandboxMetricsResponse": {
        "type": "object",
        "properties": {
          "podMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.PodSandboxMetrics"
            },
            "title": "pod_metrics"
          }
        },
        "title": "ListPodSandboxMetricsResponse",
        "additionalProperties": false
      },
      "runtime.v1.ListPodSandboxRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "title": "filter",
            "description": "PodSandboxFilter to filter a list of PodSandboxes.",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxFilter"
          }
        },
        "title": "ListPodSandboxRequest",
        "additionalProperties": false
      },
      "runtime.v1.ListPodSandboxResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.PodSandbox"
            },
            "title": "items",
            "description": "List of PodSandboxes."
          }
        },
        "title": "ListPodSandboxResponse",
        "additionalProperties": false
      },
      "runtime.v1.ListPodSandboxStatsRequest": {
        "type": "object",
        "properties": {
          "filter": {
            "title": "filter",
            "description": "Filter for the list request.",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxStatsFilter"
          }
        },
        "title": "ListPodSandboxStatsRequest",
        "additionalProperties": false
      },
      "runtime.v1.ListPodSandboxStatsResponse": {
        "type": "object",
        "properties": {
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.PodSandboxStats"
            },
            "title": "stats",
            "description": "Stats of the pod sandbox."
          }
        },
        "title": "ListPodSandboxStatsResponse",
        "additionalProperties": false
      },
      "runtime.v1.MemoryUsage": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timestamp",
            "format": "int64",
            "description": "Timestamp in nanoseconds at which the information were collected. Must be \u003e 0."
          },
          "workingSetBytes": {
            "title": "working_set_bytes",
            "description": "The amount of working set memory in bytes.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "availableBytes": {
            "title": "available_bytes",
            "description": "Available memory for use. This is defined as the memory limit - workingSetBytes.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "usageBytes": {
            "title": "usage_bytes",
            "description": "Total memory in use. This includes all memory regardless of when it was accessed.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "rssBytes": {
            "title": "rss_bytes",
            "description": "The amount of anonymous and swap cache memory (includes transparent hugepages).",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "pageFaults": {
            "title": "page_faults",
            "description": "Cumulative number of minor page faults.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "majorPageFaults": {
            "title": "major_page_faults",
            "description": "Cumulative number of major page faults.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "psi": {
            "title": "psi",
            "description": "Memory PSI statistics.",
            "$ref": "#/components/schemas/runtime.v1.PsiStats"
          }
        },
        "title": "MemoryUsage",
        "additionalProperties": false,
        "description": "MemoryUsage provides the memory usage information."
      },
      "runtime.v1.Metric": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "Name must match a name previously returned in a MetricDescriptors call,\n otherwise, it will be ignored."
          },
          "timestamp": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timestamp",
            "format": "int64",
            "description": "Timestamp should be 0 if the metric was gathered live.\n If it was cached, the Timestamp should reflect the time in nanoseconds it was collected."
          },
          "metricType": {
            "title": "metric_type",
            "$ref": "#/components/schemas/runtime.v1.MetricType"
          },
          "labelValues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "label_values",
            "description": "The corresponding LabelValues to the LabelKeys defined in the MetricDescriptor.\n It is the responsibility of the runtime to correctly keep sorted the keys and values.\n If the two slices have different length, the behavior is undefined."
          },
          "value": {
            "title": "value",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          }
        },
        "title": "Metric",
        "additionalProperties": false
      },
      "runtime.v1.MetricDescriptor": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "The name field will be used as a unique identifier of this MetricDescriptor,\n and be used in conjunction with the Metric structure to populate the full Metric."
          },
          "help": {
            "type": "string",
            "title": "help"
          },
          "labelKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "label_keys",
            "description": "When a metric uses this metric descriptor, it should only define\n labels that have previously been declared in label_keys.\n It is the responsibility of the runtime to correctly keep sorted the keys and values.\n If the two slices have different length, the behavior is undefined."
          }
        },
        "title": "MetricDescriptor",
        "additionalProperties": false
      },
      "runtime.v1.MetricType": {
        "type": "string",
        "title": "MetricType",
        "enum": [
          "COUNTER",
          "GAUGE"
        ]
      },
      "runtime.v1.Mount": {
        "type": "object",
        "properties": {
          "containerPath": {
            "type": "string",
            "title": "container_path",
            "description": "Path of the mount within the container."
          },
          "hostPath": {
            "type": "string",
            "title": "host_path",
            "description": "Path of the mount on the host. Has to be empty if the image field below\n is provided, because those fields are mutually exclusive. If the image\n field below is nil and the host path doesn't exist, then runtimes should\n report an error. If the hostpath is a symbolic link, runtimes should\n follow the symlink and mount the real destination to container."
          },
          "readonly": {
            "type": "boolean",
            "title": "readonly",
            "description": "If set, the mount is read-only."
          },
          "selinuxRelabel": {
            "type": "boolean",
            "title": "selinux_relabel",
            "description": "If set, the mount needs SELinux relabeling."
          },
          "propagation": {
            "title": "propagation",
            "description": "Requested propagation mode.",
            "$ref": "#/components/schemas/runtime.v1.MountPropagation"
          },
          "uidMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.IDMapping"
            },
            "title": "uidMappings",
            "description": "UidMappings specifies the runtime UID mappings for the mount."
          },
          "gidMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.IDMapping"
            },
            "title": "gidMappings",
            "description": "GidMappings specifies the runtime GID mappings for the mount."
          },
          "recursiveReadOnly": {
            "type": "boolean",
            "title": "recursive_read_only",
            "description": "If set to true, the mount is made recursive read-only.\n In this CRI API, recursive_read_only is a plain true/false boolean, although its equivalent\n in the Kubernetes core API is a quaternary that can be nil, \"Enabled\", \"IfPossible\", or \"Disabled\".\n kubelet translates that quaternary value in the core API into a boolean in this CRI API.\n Remarks:\n - nil is just treated as false\n - when set to true, readonly must be explicitly set to true, and propagation must be PRIVATE (0).\n - (readonly == false \u0026\u0026 recursive_read_only == false) does not make the mount read-only."
          },
          "image": {
            "title": "image",
            "description": "Mount an image reference (image ID, with or without digest), which is a\n special use case for image volume mounts. If this field is set, then\n host_path should be unset. All image mounts are per feature definition\n readonly (noexec). The kubelet does an PullImage RPC and evaluates the returned\n PullImageResponse.image_ref value, which is then set to the\n ImageSpec.image field. Runtimes are expected to mount the image as\n required.\n Introduced in the Image Volume Source KEP: https://kep.k8s.io/4639",
            "$ref": "#/components/schemas/runtime.v1.ImageSpec"
          },
          "imageSubPath": {
            "type": "string",
            "title": "image_sub_path",
            "description": "Specific image sub path to be used from inside the image instead of its\n root, only necessary if the above image field is set. If the sub path is\n not empty and does not exist in the image, then runtimes should fail and\n return an error.\n Introduced in the Image Volume Source KEP beta graduation: https://kep.k8s.io/4639"
          }
        },
        "title": "Mount",
        "additionalProperties": false,
        "description": "Mount specifies a host volume to mount into a container."
      },
      "runtime.v1.MountPropagation": {
        "type": "string",
        "title": "MountPropagation",
        "enum": [
          "PROPAGATION_PRIVATE",
          "PROPAGATION_HOST_TO_CONTAINER",
          "PROPAGATION_BIDIRECTIONAL"
        ]
      },
      "runtime.v1.Namespace": {
        "type": "object",
        "properties": {
          "options": {
            "title": "options",
            "description": "Namespace options for Linux namespaces.",
            "$ref": "#/components/schemas/runtime.v1.NamespaceOption"
          }
        },
        "title": "Namespace",
        "additionalProperties": false,
        "description": "Namespace contains paths to the namespaces."
      },
      "runtime.v1.NamespaceMode": {
        "type": "string",
        "title": "NamespaceMode",
        "enum": [
          "POD",
          "CONTAINER",
          "NODE",
          "TARGET"
        ],
        "description": "A NamespaceMode describes the intended namespace configuration for each\n of the namespaces (Network, PID, IPC) in NamespaceOption. Runtimes should\n map these modes as appropriate for the technology underlying the runtime."
      },
      "runtime.v1.NamespaceOption": {
        "type": "object",
        "properties": {
          "network": {
            "title": "network",
            "description": "Network namespace for this container/sandbox.\n Note: There is currently no way to set CONTAINER scoped network in the Kubernetes API.\n Namespaces currently set by the kubelet: POD, NODE",
            "$ref": "#/components/schemas/runtime.v1.NamespaceMode"
          },
          "pid": {
            "title": "pid",
            "description": "PID namespace for this container/sandbox.\n Note: The CRI default is POD, but the v1.PodSpec default is CONTAINER.\n The kubelet's runtime manager will set this to CONTAINER explicitly for v1 pods.\n Namespaces currently set by the kubelet: POD, CONTAINER, NODE, TARGET",
            "$ref": "#/components/schemas/runtime.v1.NamespaceMode"
          },
          "ipc": {
            "title": "ipc",
            "description": "IPC namespace for this container/sandbox.\n Note: There is currently no way to set CONTAINER scoped IPC in the Kubernetes API.\n Namespaces currently set by the kubelet: POD, NODE",
            "$ref": "#/components/schemas/runtime.v1.NamespaceMode"
          },
          "targetId": {
            "type": "string",
            "title": "target_id",
            "description": "Target Container ID for NamespaceMode of TARGET. This container must have been\n previously created in the same pod. It is not possible to specify different targets\n for each namespace."
          },
          "usernsOptions": {
            "title": "userns_options",
            "description": "UsernsOptions for this pod sandbox.\n The Kubelet picks the user namespace configuration to use for the pod sandbox.  The mappings\n are specified as part of the UserNamespace struct.  If the struct is nil, then the POD mode\n must be assumed.  This is done for backward compatibility with older Kubelet versions that\n do not set a user namespace.",
            "$ref": "#/components/schemas/runtime.v1.UserNamespace"
          }
        },
        "title": "NamespaceOption",
        "additionalProperties": false,
        "description": "NamespaceOption provides options for Linux namespaces."
      },
      "runtime.v1.NetworkConfig": {
        "type": "object",
        "properties": {
          "podCidr": {
            "type": "string",
            "title": "pod_cidr",
            "description": "CIDR to use for pod IP addresses. If the CIDR is empty, runtimes\n should omit it."
          }
        },
        "title": "NetworkConfig",
        "additionalProperties": false
      },
      "runtime.v1.NetworkInterfaceUsage": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "The name of the network interface."
          },
          "rxBytes": {
            "title": "rx_bytes",
            "description": "Cumulative count of bytes received.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "rxErrors": {
            "title": "rx_errors",
            "description": "Cumulative count of receive errors encountered.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "txBytes": {
            "title": "tx_bytes",
            "description": "Cumulative count of bytes transmitted.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "txErrors": {
            "title": "tx_errors",
            "description": "Cumulative count of transmit errors encountered.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          }
        },
        "title": "NetworkInterfaceUsage",
        "additionalProperties": false,
        "description": "NetworkInterfaceUsage contains resource value data about a network interface."
      },
      "runtime.v1.NetworkUsage": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timestamp",
            "format": "int64",
            "description": "Timestamp in nanoseconds at which the information were collected. Must be \u003e 0."
          },
          "defaultInterface": {
            "title": "default_interface",
            "description": "Stats for the default network interface.",
            "$ref": "#/components/schemas/runtime.v1.NetworkInterfaceUsage"
          },
          "interfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.NetworkInterfaceUsage"
            },
            "title": "interfaces",
            "description": "Stats for all found network interfaces, excluding the default."
          }
        },
        "title": "NetworkUsage",
        "additionalProperties": false,
        "description": "NetworkUsage contains data about network resources."
      },
      "runtime.v1.PodIP": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "title": "ip",
            "description": "an ip is a string representation of an IPv4 or an IPv6"
          }
        },
        "title": "PodIP",
        "additionalProperties": false,
        "description": "PodIP represents an ip of a Pod"
      },
      "runtime.v1.PodSandbox": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "ID of the PodSandbox."
          },
          "metadata": {
            "title": "metadata",
            "description": "Metadata of the PodSandbox.",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxMetadata"
          },
          "state": {
            "title": "state",
            "description": "State of the PodSandbox.",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxState"
          },
          "createdAt": {
            "type": [
              "integer",
              "string"
            ],
            "title": "created_at",
            "format": "int64",
            "description": "Creation timestamps of the PodSandbox in nanoseconds. Must be \u003e 0."
          },
          "labels": {
            "type": "object",
            "title": "labels",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Labels of the PodSandbox."
          },
          "annotations": {
            "type": "object",
            "title": "annotations",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Unstructured key-value map holding arbitrary metadata.\n Annotations MUST NOT be altered by the runtime; the value of this field\n MUST be identical to that of the corresponding PodSandboxConfig used to\n instantiate this PodSandbox."
          },
          "runtimeHandler": {
            "type": "string",
            "title": "runtime_handler",
            "description": "runtime configuration used for this PodSandbox."
          }
        },
        "title": "PodSandbox",
        "additionalProperties": false,
        "description": "PodSandbox contains minimal information about a sandbox."
      },
      "runtime.v1.PodSandbox.AnnotationsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "AnnotationsEntry",
        "additionalProperties": false
      },
      "runtime.v1.PodSandbox.LabelsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "LabelsEntry",
        "additionalProperties": false
      },
      "runtime.v1.PodSandboxAttributes": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "ID of the pod sandbox."
          },
          "metadata": {
            "title": "metadata",
            "description": "Metadata of the pod sandbox.",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxMetadata"
          },
          "labels": {
            "type": "object",
            "title": "labels",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Key-value pairs that may be used to scope and select individual resources."
          },
          "annotations": {
            "type": "object",
            "title": "annotations",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Unstructured key-value map holding arbitrary metadata.\n Annotations MUST NOT be altered by the runtime; the value of this field\n MUST be identical to that of the corresponding PodSandboxStatus used to\n instantiate the PodSandbox this status represents."
          }
        },
        "title": "PodSandboxAttributes",
        "additionalProperties": false,
        "description": "PodSandboxAttributes provides basic information of the pod sandbox."
      },
      "runtime.v1.PodSandboxAttributes.AnnotationsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "AnnotationsEntry",
        "additionalProperties": false
      },
      "runtime.v1.PodSandboxAttributes.LabelsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "LabelsEntry",
        "additionalProperties": false
      },
      "runtime.v1.PodSandboxConfig": {
        "type": "object",
        "properties": {
          "metadata": {
            "title": "metadata",
            "description": "Metadata of the sandbox. This information will uniquely identify the\n sandbox, and the runtime should leverage this to ensure correct\n operation. The runtime may also use this information to improve UX, such\n as by constructing a readable name.",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxMetadata"
          },
          "hostname": {
            "type": "string",
            "title": "hostname",
            "description": "Hostname of the sandbox. Hostname could only be empty when the pod\n network namespace is NODE."
          },
          "logDirectory": {
            "type": "string",
            "title": "log_directory",
            "description": "Path to the directory on the host in which container log files are\n stored.\n By default the log of a container going into the LogDirectory will be\n hooked up to STDOUT and STDERR. However, the LogDirectory may contain\n binary log files with structured logging data from the individual\n containers. For example, the files might be newline separated JSON\n structured logs, systemd-journald journal files, gRPC trace files, etc.\n E.g.,\n     PodSandboxConfig.LogDirectory = `/var/log/pods/\u003cNAMESPACE\u003e_\u003cNAME\u003e_\u003cUID\u003e/`\n     ContainerConfig.LogPath = `containerName/Instance#.log`"
          },
          "dnsConfig": {
            "title": "dns_config",
            "description": "DNS config for the sandbox.",
            "$ref": "#/components/schemas/runtime.v1.DNSConfig"
          },
          "portMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.PortMapping"
            },
            "title": "port_mappings",
            "description": "Port mappings for the sandbox."
          },
          "labels": {
            "type": "object",
            "title": "labels",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Key-value pairs that may be used to scope and select individual resources."
          },
          "annotations": {
            "type": "object",
            "title": "annotations",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Unstructured key-value map that may be set by the kubelet to store and\n retrieve arbitrary metadata. This will include any annotations set on a\n pod through the Kubernetes API.\n\n Annotations MUST NOT be altered by the runtime; the annotations stored\n here MUST be returned in the PodSandboxStatus associated with the pod\n this PodSandboxConfig creates.\n\n In general, in order to preserve a well-defined interface between the\n kubelet and the container runtime, annotations SHOULD NOT influence\n runtime behaviour.\n\n Annotations can also be useful for runtime authors to experiment with\n new features that are opaque to the Kubernetes APIs (both user-facing\n and the CRI). Whenever possible, however, runtime authors SHOULD\n consider proposing new typed fields for any new features instead."
          },
          "linux": {
            "title": "linux",
            "description": "Optional configurations specific to Linux hosts.",
            "$ref": "#/components/schemas/runtime.v1.LinuxPodSandboxConfig"
          },
          "windows": {
            "title": "windows",
            "description": "Optional configurations specific to Windows hosts.",
            "$ref": "#/components/schemas/runtime.v1.WindowsPodSandboxConfig"
          }
        },
        "title": "PodSandboxConfig",
        "additionalProperties": false,
        "description": "PodSandboxConfig holds all the required and optional fields for creating a\n sandbox."
      },
      "runtime.v1.PodSandboxConfig.AnnotationsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "AnnotationsEntry",
        "additionalProperties": false
      },
      "runtime.v1.PodSandboxConfig.LabelsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "LabelsEntry",
        "additionalProperties": false
      },
      "runtime.v1.PodSandboxFilter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "ID of the sandbox."
          },
          "state": {
            "title": "state",
            "description": "State of the sandbox.",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxStateValue"
          },
          "labelSelector": {
            "type": "object",
            "title": "label_selector",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "LabelSelector to select matches.\n Only api.MatchLabels is supported for now and the requirements\n are ANDed. MatchExpressions is not supported yet."
          }
        },
        "title": "PodSandboxFilter",
        "additionalProperties": false,
        "description": "PodSandboxFilter is used to filter a list of PodSandboxes.\n All those fields are combined with 'AND'"
      },
      "runtime.v1.PodSandboxFilter.LabelSelectorEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "LabelSelectorEntry",
        "additionalProperties": false
      },
      "runtime.v1.PodSandboxMetadata": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "Pod name of the sandbox. Same as the pod name in the Pod ObjectMeta."
          },
          "uid": {
            "type": "string",
            "title": "uid",
            "description": "Pod UID of the sandbox. Same as the pod UID in the Pod ObjectMeta."
          },
          "namespace": {
            "type": "string",
            "title": "namespace",
            "description": "Pod namespace of the sandbox. Same as the pod namespace in the Pod ObjectMeta."
          },
          "attempt": {
            "type": "integer",
            "title": "attempt",
            "description": "Attempt number of creating the sandbox. Default: 0."
          }
        },
        "title": "PodSandboxMetadata",
        "additionalProperties": false,
        "description": "PodSandboxMetadata holds all necessary information for building the sandbox name.\n The container runtime is encouraged to expose the metadata associated with the\n PodSandbox in its user interface for better user experience. For example,\n the runtime can construct a unique PodSandboxName based on the metadata."
      },
      "runtime.v1.PodSandboxMetrics": {
        "type": "object",
        "properties": {
          "podSandboxId": {
            "type": "string",
            "title": "pod_sandbox_id"
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.Metric"
            },
            "title": "metrics"
          },
          "containerMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.ContainerMetrics"
            },
            "title": "container_metrics"
          }
        },
        "title": "PodSandboxMetrics",
        "additionalProperties": false
      },
      "runtime.v1.PodSandboxNetworkStatus": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "title": "ip",
            "description": "IP address of the PodSandbox."
          },
          "additionalIps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.PodIP"
            },
            "title": "additional_ips",
            "description": "list of additional ips (not inclusive of PodSandboxNetworkStatus.Ip) of the PodSandBoxNetworkStatus"
          }
        },
        "title": "PodSandboxNetworkStatus",
        "additionalProperties": false,
        "description": "PodSandboxNetworkStatus is the status of the network for a PodSandbox.\n Currently ignored for pods sharing the host networking namespace."
      },
      "runtime.v1.PodSandboxState": {
        "type": "string",
        "title": "PodSandboxState",
        "enum": [
          "SANDBOX_READY",
          "SANDBOX_NOTREADY"
        ]
      },
      "runtime.v1.PodSandboxStateValue": {
        "type": "object",
        "properties": {
          "state": {
            "title": "state",
            "description": "State of the sandbox.",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxState"
          }
        },
        "title": "PodSandboxStateValue",
        "additionalProperties": false,
        "description": "PodSandboxStateValue is the wrapper of PodSandboxState."
      },
      "runtime.v1.PodSandboxStats": {
        "type": "object",
        "properties": {
          "attributes": {
            "title": "attributes",
            "description": "Information of the pod.",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxAttributes"
          },
          "linux": {
            "title": "linux",
            "description": "Stats from linux.",
            "$ref": "#/components/schemas/runtime.v1.LinuxPodSandboxStats"
          },
          "windows": {
            "title": "windows",
            "description": "Stats from windows.",
            "$ref": "#/components/schemas/runtime.v1.WindowsPodSandboxStats"
          }
        },
        "title": "PodSandboxStats",
        "additionalProperties": false,
        "description": "PodSandboxStats provides the resource usage statistics for a pod.\n The linux or windows field will be populated depending on the platform."
      },
      "runtime.v1.PodSandboxStatsFilter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "ID of the pod sandbox."
          },
          "labelSelector": {
            "type": "object",
            "title": "label_selector",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "LabelSelector to select matches.\n Only api.MatchLabels is supported for now and the requirements\n are ANDed. MatchExpressions is not supported yet."
          }
        },
        "title": "PodSandboxStatsFilter",
        "additionalProperties": false,
        "description": "PodSandboxStatsFilter is used to filter the list of pod sandboxes to retrieve stats for.\n All those fields are combined with 'AND'."
      },
      "runtime.v1.PodSandboxStatsFilter.LabelSelectorEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "LabelSelectorEntry",
        "additionalProperties": false
      },
      "runtime.v1.PodSandboxStatsRequest": {
        "type": "object",
        "properties": {
          "podSandboxId": {
            "type": "string",
            "title": "pod_sandbox_id",
            "description": "ID of the pod sandbox for which to retrieve stats."
          }
        },
        "title": "PodSandboxStatsRequest",
        "additionalProperties": false
      },
      "runtime.v1.PodSandboxStatsResponse": {
        "type": "object",
        "properties": {
          "stats": {
            "title": "stats",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxStats"
          }
        },
        "title": "PodSandboxStatsResponse",
        "additionalProperties": false
      },
      "runtime.v1.PodSandboxStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id",
            "description": "ID of the sandbox."
          },
          "metadata": {
            "title": "metadata",
            "description": "Metadata of the sandbox.",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxMetadata"
          },
          "state": {
            "title": "state",
            "description": "State of the sandbox.",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxState"
          },
          "createdAt": {
            "type": [
              "integer",
              "string"
            ],
            "title": "created_at",
            "format": "int64",
            "description": "Creation timestamp of the sandbox in nanoseconds. Must be \u003e 0."
          },
          "network": {
            "title": "network",
            "description": "Network contains network status if network is handled by the runtime.",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxNetworkStatus"
          },
          "linux": {
            "title": "linux",
            "description": "Linux-specific status to a pod sandbox.",
            "$ref": "#/components/schemas/runtime.v1.LinuxPodSandboxStatus"
          },
          "labels": {
            "type": "object",
            "title": "labels",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Labels are key-value pairs that may be used to scope and select individual resources."
          },
          "annotations": {
            "type": "object",
            "title": "annotations",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Unstructured key-value map holding arbitrary metadata.\n Annotations MUST NOT be altered by the runtime; the value of this field\n MUST be identical to that of the corresponding PodSandboxConfig used to\n instantiate the pod sandbox this status represents."
          },
          "runtimeHandler": {
            "type": "string",
            "title": "runtime_handler",
            "description": "runtime configuration used for this PodSandbox."
          }
        },
        "title": "PodSandboxStatus",
        "additionalProperties": false,
        "description": "PodSandboxStatus contains the status of the PodSandbox."
      },
      "runtime.v1.PodSandboxStatus.AnnotationsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "AnnotationsEntry",
        "additionalProperties": false
      },
      "runtime.v1.PodSandboxStatus.LabelsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "LabelsEntry",
        "additionalProperties": false
      },
      "runtime.v1.PodSandboxStatusRequest": {
        "type": "object",
        "properties": {
          "podSandboxId": {
            "type": "string",
            "title": "pod_sandbox_id",
            "description": "ID of the PodSandbox for which to retrieve status."
          },
          "verbose": {
            "type": "boolean",
            "title": "verbose",
            "description": "Verbose indicates whether to return extra information about the pod sandbox."
          }
        },
        "title": "PodSandboxStatusRequest",
        "additionalProperties": false
      },
      "runtime.v1.PodSandboxStatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "title": "status",
            "description": "Status of the PodSandbox.",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxStatus"
          },
          "info": {
            "type": "object",
            "title": "info",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Info is extra information of the PodSandbox. The key could be arbitrary string, and\n value should be in json format. The information could include anything useful for\n debug, e.g. network namespace for linux container based container runtime.\n It should only be returned non-empty when Verbose is true."
          },
          "containersStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.ContainerStatus"
            },
            "title": "containers_statuses",
            "description": "Container statuses"
          },
          "timestamp": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timestamp",
            "format": "int64",
            "description": "Timestamp in nanoseconds at which container and pod statuses were recorded"
          }
        },
        "title": "PodSandboxStatusResponse",
        "additionalProperties": false
      },
      "runtime.v1.PodSandboxStatusResponse.InfoEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "InfoEntry",
        "additionalProperties": false
      },
      "runtime.v1.PortForwardRequest": {
        "type": "object",
        "properties": {
          "podSandboxId": {
            "type": "string",
            "title": "pod_sandbox_id",
            "description": "ID of the container to which to forward the port."
          },
          "port": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "title": "port",
            "description": "Port to forward."
          }
        },
        "title": "PortForwardRequest",
        "additionalProperties": false
      },
      "runtime.v1.PortForwardResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "title": "url",
            "description": "Fully qualified URL of the port-forward streaming server."
          }
        },
        "title": "PortForwardResponse",
        "additionalProperties": false
      },
      "runtime.v1.PortMapping": {
        "type": "object",
        "properties": {
          "protocol": {
            "title": "protocol",
            "description": "Protocol of the port mapping.",
            "$ref": "#/components/schemas/runtime.v1.Protocol"
          },
          "containerPort": {
            "type": "integer",
            "title": "container_port",
            "format": "int32",
            "description": "Port number within the container. Default: 0 (not specified)."
          },
          "hostPort": {
            "type": "integer",
            "title": "host_port",
            "format": "int32",
            "description": "Port number on the host to map the container port to.\n\n * Valid host port range is 1-65535.\n * The value 0 has explicit semantic meaning: it indicates NO host port should be allocated.\n * The value 0 does NOT indicate dynamic port allocation. Future implementations\n   of dynamic allocation will use different values/semantics.\n * Implementations MUST handle the case where this field is explicitly set to 0,\n   This field SHOULD be omitted when no port is required.\n\n Default: If omitted, container port will not be exposed on the host."
          },
          "hostIp": {
            "type": "string",
            "title": "host_ip",
            "description": "Host IP."
          }
        },
        "title": "PortMapping",
        "additionalProperties": false,
        "description": "PortMapping specifies the port mapping configurations of a sandbox."
      },
      "runtime.v1.ProcessUsage": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timestamp",
            "format": "int64",
            "description": "Timestamp in nanoseconds at which the information were collected. Must be \u003e 0."
          },
          "processCount": {
            "title": "process_count",
            "description": "Number of processes.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          }
        },
        "title": "ProcessUsage",
        "additionalProperties": false,
        "description": "ProcessUsage are stats pertaining to processes."
      },
      "runtime.v1.Protocol": {
        "type": "string",
        "title": "Protocol",
        "enum": [
          "TCP",
          "UDP",
          "SCTP"
        ]
      },
      "runtime.v1.PsiData": {
        "type": "object",
        "properties": {
          "Total": {
            "type": [
              "integer",
              "string"
            ],
            "title": "Total",
            "format": "int64",
            "description": "Total time duration for tasks in the cgroup have waited due to congestion.\n Unit: nanoseconds."
          },
          "Avg10": {
            "type": "number",
            "title": "Avg10",
            "format": "double",
            "description": "The average (in %) tasks have waited due to congestion over a 10 second window."
          },
          "Avg60": {
            "type": "number",
            "title": "Avg60",
            "format": "double",
            "description": "The average (in %) tasks have waited due to congestion over a 60 second window."
          },
          "Avg300": {
            "type": "number",
            "title": "Avg300",
            "format": "double",
            "description": "The average (in %) tasks have waited due to congestion over a 300 second window."
          }
        },
        "title": "PsiData",
        "additionalProperties": false,
        "description": "PSI data for an individual resource."
      },
      "runtime.v1.PsiStats": {
        "type": "object",
        "properties": {
          "Full": {
            "title": "Full",
            "description": "PSI data for all tasks in the cgroup.",
            "$ref": "#/components/schemas/runtime.v1.PsiData"
          },
          "Some": {
            "title": "Some",
            "description": "PSI data for some tasks in the cgroup.",
            "$ref": "#/components/schemas/runtime.v1.PsiData"
          }
        },
        "title": "PsiStats",
        "additionalProperties": false,
        "description": "PSI statistics for an individual resource."
      },
      "runtime.v1.PullImageRequest": {
        "type": "object",
        "properties": {
          "image": {
            "title": "image",
            "description": "Spec of the image.",
            "$ref": "#/components/schemas/runtime.v1.ImageSpec"
          },
          "auth": {
            "title": "auth",
            "description": "Authentication configuration for pulling the image.",
            "$ref": "#/components/schemas/runtime.v1.AuthConfig"
          },
          "sandboxConfig": {
            "title": "sandbox_config",
            "description": "Config of the PodSandbox, which is used to pull image in PodSandbox context.",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxConfig"
          }
        },
        "title": "PullImageRequest",
        "additionalProperties": false
      },
      "runtime.v1.PullImageResponse": {
        "type": "object",
        "properties": {
          "imageRef": {
            "type": "string",
            "title": "image_ref",
            "description": "Reference to the image in use. For most runtimes, this should be an\n image ID or digest."
          }
        },
        "title": "PullImageResponse",
        "additionalProperties": false
      },
      "runtime.v1.RemoveContainerRequest": {
        "type": "object",
        "properties": {
          "containerId": {
            "type": "string",
            "title": "container_id",
            "description": "ID of the container to remove."
          }
        },
        "title": "RemoveContainerRequest",
        "additionalProperties": false
      },
      "runtime.v1.RemoveContainerResponse": {
        "type": "object",
        "title": "RemoveContainerResponse",
        "additionalProperties": false
      },
      "runtime.v1.RemoveImageRequest": {
        "type": "object",
        "properties": {
          "image": {
            "title": "image",
            "description": "Spec of the image to remove.",
            "$ref": "#/components/schemas/runtime.v1.ImageSpec"
          }
        },
        "title": "RemoveImageRequest",
        "additionalProperties": false
      },
      "runtime.v1.RemoveImageResponse": {
        "type": "object",
        "title": "RemoveImageResponse",
        "additionalProperties": false
      },
      "runtime.v1.RemovePodSandboxRequest": {
        "type": "object",
        "properties": {
          "podSandboxId": {
            "type": "string",
            "title": "pod_sandbox_id",
            "description": "ID of the PodSandbox to remove."
          }
        },
        "title": "RemovePodSandboxRequest",
        "additionalProperties": false
      },
      "runtime.v1.RemovePodSandboxResponse": {
        "type": "object",
        "title": "RemovePodSandboxResponse",
        "additionalProperties": false
      },
      "runtime.v1.ReopenContainerLogRequest": {
        "type": "object",
        "properties": {
          "containerId": {
            "type": "string",
            "title": "container_id",
            "description": "ID of the container for which to reopen the log."
          }
        },
        "title": "ReopenContainerLogRequest",
        "additionalProperties": false
      },
      "runtime.v1.ReopenContainerLogResponse": {
        "type": "object",
        "title": "ReopenContainerLogResponse",
        "additionalProperties": false
      },
      "runtime.v1.RunPodSandboxRequest": {
        "type": "object",
        "properties": {
          "config": {
            "title": "config",
            "description": "Configuration for creating a PodSandbox.",
            "$ref": "#/components/schemas/runtime.v1.PodSandboxConfig"
          },
          "runtimeHandler": {
            "type": "string",
            "title": "runtime_handler",
            "description": "Named runtime configuration to use for this PodSandbox.\n If the runtime handler is unknown, this request should be rejected.  An\n empty string should select the default handler, equivalent to the\n behavior before this feature was added.\n See https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class"
          }
        },
        "title": "RunPodSandboxRequest",
        "additionalProperties": false
      },
      "runtime.v1.RunPodSandboxResponse": {
        "type": "object",
        "properties": {
          "podSandboxId": {
            "type": "string",
            "title": "pod_sandbox_id",
            "description": "ID of the PodSandbox to run."
          }
        },
        "title": "RunPodSandboxResponse",
        "additionalProperties": false
      },
      "runtime.v1.RuntimeCondition": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "title": "type",
            "description": "Type of runtime condition."
          },
          "status": {
            "type": "boolean",
            "title": "status",
            "description": "Status of the condition, one of true/false. Default: false."
          },
          "reason": {
            "type": "string",
            "title": "reason",
            "description": "Brief CamelCase string containing reason for the condition's last transition."
          },
          "message": {
            "type": "string",
            "title": "message",
            "description": "Human-readable message indicating details about last transition."
          }
        },
        "title": "RuntimeCondition",
        "additionalProperties": false,
        "description": "RuntimeCondition contains condition information for the runtime.\n There are 2 kinds of runtime conditions:\n 1. Required conditions: Conditions are required for kubelet to work\n properly. If any required condition is unmet, the node will be not ready.\n The required conditions include:\n   * RuntimeReady: RuntimeReady means the runtime is up and ready to accept\n   basic containers e.g. container only needs host network.\n   * NetworkReady: NetworkReady means the runtime network is up and ready to\n   accept containers which require container network.\n 2. Optional conditions: Conditions are informative to the user, but kubelet\n will not rely on. Since condition type is an arbitrary string, all conditions\n not required are optional. These conditions will be exposed to users to help\n them understand the status of the system."
      },
      "runtime.v1.RuntimeConfig": {
        "type": "object",
        "properties": {
          "networkConfig": {
            "title": "network_config",
            "$ref": "#/components/schemas/runtime.v1.NetworkConfig"
          }
        },
        "title": "RuntimeConfig",
        "additionalProperties": false
      },
      "runtime.v1.RuntimeConfigRequest": {
        "type": "object",
        "title": "RuntimeConfigRequest",
        "additionalProperties": false
      },
      "runtime.v1.RuntimeConfigResponse": {
        "type": "object",
        "properties": {
          "linux": {
            "title": "linux",
            "description": "Configuration information for Linux-based runtimes. This field contains\n global runtime configuration options that are not specific to runtime\n handlers.",
            "$ref": "#/components/schemas/runtime.v1.LinuxRuntimeConfiguration"
          }
        },
        "title": "RuntimeConfigResponse",
        "additionalProperties": false
      },
      "runtime.v1.RuntimeFeatures": {
        "type": "object",
        "properties": {
          "supplementalGroupsPolicy": {
            "type": "boolean",
            "title": "supplemental_groups_policy",
            "description": "supplemental_groups_policy is set to true if the runtime supports SupplementalGroupsPolicy and ContainerUser."
          }
        },
        "title": "RuntimeFeatures",
        "additionalProperties": false,
        "description": "RuntimeFeatures describes the set of features implemented by the CRI implementation.\n The features contained in the RuntimeFeatures should depend only on the cri implementation\n independent of runtime handlers."
      },
      "runtime.v1.RuntimeHandler": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "Name must be unique in StatusResponse.\n An empty string denotes the default handler."
          },
          "features": {
            "title": "features",
            "description": "Supported features.",
            "$ref": "#/components/schemas/runtime.v1.RuntimeHandlerFeatures"
          }
        },
        "title": "RuntimeHandler",
        "additionalProperties": false
      },
      "runtime.v1.RuntimeHandlerFeatures": {
        "type": "object",
        "properties": {
          "recursiveReadOnlyMounts": {
            "type": "boolean",
            "title": "recursive_read_only_mounts",
            "description": "recursive_read_only_mounts is set to true if the runtime handler supports\n recursive read-only mounts.\n For runc-compatible runtimes, availability of this feature can be detected by checking whether\n the Linux kernel version is \u003e= 5.12, and,  `runc features | jq .mountOptions` contains \"rro\"."
          },
          "userNamespaces": {
            "type": "boolean",
            "title": "user_namespaces",
            "description": "user_namespaces is set to true if the runtime handler supports user namespaces as implemented\n in Kubernetes. This means support for both, user namespaces and idmap mounts."
          }
        },
        "title": "RuntimeHandlerFeatures",
        "additionalProperties": false,
        "description": "RuntimeHandlerFeatures is a set of features implemented by the runtime handler."
      },
      "runtime.v1.RuntimeStatus": {
        "type": "object",
        "properties": {
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.RuntimeCondition"
            },
            "title": "conditions",
            "description": "List of current observed runtime conditions."
          }
        },
        "title": "RuntimeStatus",
        "additionalProperties": false,
        "description": "RuntimeStatus is information about the current status of the runtime."
      },
      "runtime.v1.SELinuxOption": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "title": "user"
          },
          "role": {
            "type": "string",
            "title": "role"
          },
          "type": {
            "type": "string",
            "title": "type"
          },
          "level": {
            "type": "string",
            "title": "level"
          }
        },
        "title": "SELinuxOption",
        "additionalProperties": false,
        "description": "SELinuxOption are the labels to be applied to the container."
      },
      "runtime.v1.SecurityProfile": {
        "type": "object",
        "properties": {
          "profileType": {
            "title": "profile_type",
            "description": "Indicator which `ProfileType` should be applied.",
            "$ref": "#/components/schemas/runtime.v1.SecurityProfile.ProfileType"
          },
          "localhostRef": {
            "type": "string",
            "title": "localhost_ref",
            "description": "Indicates that a pre-defined profile on the node should be used.\n Must only be set if `ProfileType` is `Localhost`.\n For seccomp, it must be an absolute path to the seccomp profile.\n For AppArmor, this field is the AppArmor `\u003cprofile name\u003e/`"
          }
        },
        "title": "SecurityProfile",
        "additionalProperties": false,
        "description": "A security profile which can be used for sandboxes and containers."
      },
      "runtime.v1.SecurityProfile.ProfileType": {
        "type": "string",
        "title": "ProfileType",
        "enum": [
          "RuntimeDefault",
          "Unconfined",
          "Localhost"
        ],
        "description": "Available profile types."
      },
      "runtime.v1.Signal": {
        "type": "string",
        "title": "Signal",
        "enum": [
          "RUNTIME_DEFAULT",
          "SIGABRT",
          "SIGALRM",
          "SIGBUS",
          "SIGCHLD",
          "SIGCLD",
          "SIGCONT",
          "SIGFPE",
          "SIGHUP",
          "SIGILL",
          "SIGINT",
          "SIGIO",
          "SIGIOT",
          "SIGKILL",
          "SIGPIPE",
          "SIGPOLL",
          "SIGPROF",
          "SIGPWR",
          "SIGQUIT",
          "SIGSEGV",
          "SIGSTKFLT",
          "SIGSTOP",
          "SIGSYS",
          "SIGTERM",
          "SIGTRAP",
          "SIGTSTP",
          "SIGTTIN",
          "SIGTTOU",
          "SIGURG",
          "SIGUSR1",
          "SIGUSR2",
          "SIGVTALRM",
          "SIGWINCH",
          "SIGXCPU",
          "SIGXFSZ",
          "SIGRTMIN",
          "SIGRTMINPLUS1",
          "SIGRTMINPLUS2",
          "SIGRTMINPLUS3",
          "SIGRTMINPLUS4",
          "SIGRTMINPLUS5",
          "SIGRTMINPLUS6",
          "SIGRTMINPLUS7",
          "SIGRTMINPLUS8",
          "SIGRTMINPLUS9",
          "SIGRTMINPLUS10",
          "SIGRTMINPLUS11",
          "SIGRTMINPLUS12",
          "SIGRTMINPLUS13",
          "SIGRTMINPLUS14",
          "SIGRTMINPLUS15",
          "SIGRTMAXMINUS14",
          "SIGRTMAXMINUS13",
          "SIGRTMAXMINUS12",
          "SIGRTMAXMINUS11",
          "SIGRTMAXMINUS10",
          "SIGRTMAXMINUS9",
          "SIGRTMAXMINUS8",
          "SIGRTMAXMINUS7",
          "SIGRTMAXMINUS6",
          "SIGRTMAXMINUS5",
          "SIGRTMAXMINUS4",
          "SIGRTMAXMINUS3",
          "SIGRTMAXMINUS2",
          "SIGRTMAXMINUS1",
          "SIGRTMAX"
        ]
      },
      "runtime.v1.StartContainerRequest": {
        "type": "object",
        "properties": {
          "containerId": {
            "type": "string",
            "title": "container_id",
            "description": "ID of the container to start."
          }
        },
        "title": "StartContainerRequest",
        "additionalProperties": false
      },
      "runtime.v1.StartContainerResponse": {
        "type": "object",
        "title": "StartContainerResponse",
        "additionalProperties": false
      },
      "runtime.v1.StatusRequest": {
        "type": "object",
        "properties": {
          "verbose": {
            "type": "boolean",
            "title": "verbose",
            "description": "Verbose indicates whether to return extra information about the runtime."
          }
        },
        "title": "StatusRequest",
        "additionalProperties": false
      },
      "runtime.v1.StatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "title": "status",
            "description": "Status of the Runtime.",
            "$ref": "#/components/schemas/runtime.v1.RuntimeStatus"
          },
          "info": {
            "type": "object",
            "title": "info",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Info is extra information of the Runtime. The key could be arbitrary string, and\n value should be in json format. The information could include anything useful for\n debug, e.g. plugins used by the container runtime.\n It should only be returned non-empty when Verbose is true."
          },
          "runtimeHandlers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.RuntimeHandler"
            },
            "title": "runtime_handlers",
            "description": "Runtime handlers."
          },
          "features": {
            "title": "features",
            "description": "features describes the set of features implemented by the CRI implementation.\n This field is supposed to propagate to NodeFeatures in Kubernetes API.",
            "$ref": "#/components/schemas/runtime.v1.RuntimeFeatures"
          }
        },
        "title": "StatusResponse",
        "additionalProperties": false
      },
      "runtime.v1.StatusResponse.InfoEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "InfoEntry",
        "additionalProperties": false
      },
      "runtime.v1.StopContainerRequest": {
        "type": "object",
        "properties": {
          "containerId": {
            "type": "string",
            "title": "container_id",
            "description": "ID of the container to stop."
          },
          "timeout": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timeout",
            "format": "int64",
            "description": "Timeout in seconds to wait for the container to stop before forcibly\n terminating it. Default: 0 (forcibly terminate the container immediately)"
          }
        },
        "title": "StopContainerRequest",
        "additionalProperties": false
      },
      "runtime.v1.StopContainerResponse": {
        "type": "object",
        "title": "StopContainerResponse",
        "additionalProperties": false
      },
      "runtime.v1.StopPodSandboxRequest": {
        "type": "object",
        "properties": {
          "podSandboxId": {
            "type": "string",
            "title": "pod_sandbox_id",
            "description": "ID of the PodSandbox to stop."
          }
        },
        "title": "StopPodSandboxRequest",
        "additionalProperties": false
      },
      "runtime.v1.StopPodSandboxResponse": {
        "type": "object",
        "title": "StopPodSandboxResponse",
        "additionalProperties": false
      },
      "runtime.v1.SupplementalGroupsPolicy": {
        "type": "string",
        "title": "SupplementalGroupsPolicy",
        "enum": [
          "Merge",
          "Strict"
        ],
        "description": "SupplementalGroupsPolicy defines how supplemental groups \n of the first container processes are calculated."
      },
      "runtime.v1.SwapUsage": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timestamp",
            "format": "int64",
            "description": "Timestamp in nanoseconds at which the information were collected. Must be \u003e 0."
          },
          "swapAvailableBytes": {
            "title": "swap_available_bytes",
            "description": "Available swap for use. This is defined as the swap limit - swapUsageBytes.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "swapUsageBytes": {
            "title": "swap_usage_bytes",
            "description": "Total memory in use. This includes all memory regardless of when it was accessed.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          }
        },
        "title": "SwapUsage",
        "additionalProperties": false
      },
      "runtime.v1.UInt64Value": {
        "type": "object",
        "properties": {
          "value": {
            "type": [
              "integer",
              "string"
            ],
            "title": "value",
            "format": "int64",
            "description": "The value."
          }
        },
        "title": "UInt64Value",
        "additionalProperties": false,
        "description": "UInt64Value is the wrapper of uint64."
      },
      "runtime.v1.UpdateContainerResourcesRequest": {
        "type": "object",
        "properties": {
          "containerId": {
            "type": "string",
            "title": "container_id",
            "description": "ID of the container to update."
          },
          "linux": {
            "title": "linux",
            "description": "Resource configuration specific to Linux containers.",
            "$ref": "#/components/schemas/runtime.v1.LinuxContainerResources"
          },
          "windows": {
            "title": "windows",
            "description": "Resource configuration specific to Windows containers.",
            "$ref": "#/components/schemas/runtime.v1.WindowsContainerResources"
          },
          "annotations": {
            "type": "object",
            "title": "annotations",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            },
            "description": "Unstructured key-value map holding arbitrary additional information for\n container resources updating. This can be used for specifying experimental\n resources to update or other options to use when updating the container."
          }
        },
        "title": "UpdateContainerResourcesRequest",
        "additionalProperties": false
      },
      "runtime.v1.UpdateContainerResourcesRequest.AnnotationsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "AnnotationsEntry",
        "additionalProperties": false
      },
      "runtime.v1.UpdateContainerResourcesResponse": {
        "type": "object",
        "title": "UpdateContainerResourcesResponse",
        "additionalProperties": false
      },
      "runtime.v1.UpdatePodSandboxResourcesRequest": {
        "type": "object",
        "properties": {
          "podSandboxId": {
            "type": "string",
            "title": "pod_sandbox_id",
            "description": "ID of the PodSandbox to update."
          },
          "overhead": {
            "title": "overhead",
            "description": "Optional overhead represents the overheads associated with this sandbox",
            "$ref": "#/components/schemas/runtime.v1.LinuxContainerResources"
          },
          "resources": {
            "title": "resources",
            "description": "Optional resources represents the sum of container resources for this sandbox",
            "$ref": "#/components/schemas/runtime.v1.LinuxContainerResources"
          }
        },
        "title": "UpdatePodSandboxResourcesRequest",
        "additionalProperties": false
      },
      "runtime.v1.UpdatePodSandboxResourcesResponse": {
        "type": "object",
        "title": "UpdatePodSandboxResourcesResponse",
        "additionalProperties": false
      },
      "runtime.v1.UpdateRuntimeConfigRequest": {
        "type": "object",
        "properties": {
          "runtimeConfig": {
            "title": "runtime_config",
            "$ref": "#/components/schemas/runtime.v1.RuntimeConfig"
          }
        },
        "title": "UpdateRuntimeConfigRequest",
        "additionalProperties": false
      },
      "runtime.v1.UpdateRuntimeConfigResponse": {
        "type": "object",
        "title": "UpdateRuntimeConfigResponse",
        "additionalProperties": false
      },
      "runtime.v1.UserNamespace": {
        "type": "object",
        "properties": {
          "mode": {
            "title": "mode",
            "description": "Mode is the NamespaceMode for this UserNamespace.\n Note: NamespaceMode for UserNamespace currently supports only POD and NODE, not CONTAINER OR TARGET.",
            "$ref": "#/components/schemas/runtime.v1.NamespaceMode"
          },
          "uids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.IDMapping"
            },
            "title": "uids",
            "description": "Uids specifies the UID mappings for the user namespace."
          },
          "gids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.IDMapping"
            },
            "title": "gids",
            "description": "Gids specifies the GID mappings for the user namespace."
          }
        },
        "title": "UserNamespace",
        "additionalProperties": false,
        "description": "UserNamespace describes the intended user namespace configuration for a pod sandbox."
      },
      "runtime.v1.VersionRequest": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "title": "version",
            "description": "Version of the kubelet runtime API."
          }
        },
        "title": "VersionRequest",
        "additionalProperties": false
      },
      "runtime.v1.VersionResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "title": "version",
            "description": "Version of the kubelet runtime API."
          },
          "runtimeName": {
            "type": "string",
            "title": "runtime_name",
            "description": "Name of the container runtime."
          },
          "runtimeVersion": {
            "type": "string",
            "title": "runtime_version",
            "description": "Version of the container runtime. The string must be\n semver-compatible."
          },
          "runtimeApiVersion": {
            "type": "string",
            "title": "runtime_api_version",
            "description": "API version of the container runtime. The string must be\n semver-compatible."
          }
        },
        "title": "VersionResponse",
        "additionalProperties": false
      },
      "runtime.v1.WindowsContainerConfig": {
        "type": "object",
        "properties": {
          "resources": {
            "title": "resources",
            "description": "Resources specification for the container.",
            "$ref": "#/components/schemas/runtime.v1.WindowsContainerResources"
          },
          "securityContext": {
            "title": "security_context",
            "description": "WindowsContainerSecurityContext configuration for the container.",
            "$ref": "#/components/schemas/runtime.v1.WindowsContainerSecurityContext"
          }
        },
        "title": "WindowsContainerConfig",
        "additionalProperties": false,
        "description": "WindowsContainerConfig contains platform-specific configuration for\n Windows-based containers."
      },
      "runtime.v1.WindowsContainerResources": {
        "type": "object",
        "properties": {
          "cpuShares": {
            "type": [
              "integer",
              "string"
            ],
            "title": "cpu_shares",
            "format": "int64",
            "description": "CPU shares (relative weight vs. other containers). Default: 0 (not specified)."
          },
          "cpuCount": {
            "type": [
              "integer",
              "string"
            ],
            "title": "cpu_count",
            "format": "int64",
            "description": "Number of CPUs available to the container. Default: 0 (not specified)."
          },
          "cpuMaximum": {
            "type": [
              "integer",
              "string"
            ],
            "title": "cpu_maximum",
            "format": "int64",
            "description": "Specifies the portion of processor cycles that this container can use as a percentage times 100."
          },
          "memoryLimitInBytes": {
            "type": [
              "integer",
              "string"
            ],
            "title": "memory_limit_in_bytes",
            "format": "int64",
            "description": "Memory limit in bytes. Default: 0 (not specified)."
          },
          "rootfsSizeInBytes": {
            "type": [
              "integer",
              "string"
            ],
            "title": "rootfs_size_in_bytes",
            "format": "int64",
            "description": "Specifies the size of the rootfs / scratch space in bytes to be configured for this container. Default: 0 (not specified)."
          },
          "affinityCpus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.WindowsCpuGroupAffinity"
            },
            "title": "affinity_cpus",
            "description": "Optionally specifies the set of CPUs to affinitize for this container."
          }
        },
        "title": "WindowsContainerResources",
        "additionalProperties": false,
        "description": "WindowsContainerResources specifies Windows specific configuration for\n resources."
      },
      "runtime.v1.WindowsContainerSecurityContext": {
        "type": "object",
        "properties": {
          "runAsUsername": {
            "type": "string",
            "title": "run_as_username",
            "description": "User name to run the container process as. If specified, the user MUST\n exist in the container image and be resolved there by the runtime;\n otherwise, the runtime MUST return error."
          },
          "credentialSpec": {
            "type": "string",
            "title": "credential_spec",
            "description": "The contents of the GMSA credential spec to use to run this container."
          },
          "hostProcess": {
            "type": "boolean",
            "title": "host_process",
            "description": "Indicates whether a container is to be run as a HostProcess container."
          }
        },
        "title": "WindowsContainerSecurityContext",
        "additionalProperties": false,
        "description": "WindowsContainerSecurityContext holds windows security configuration that will be applied to a container."
      },
      "runtime.v1.WindowsContainerStats": {
        "type": "object",
        "properties": {
          "attributes": {
            "title": "attributes",
            "description": "Information of the container.",
            "$ref": "#/components/schemas/runtime.v1.ContainerAttributes"
          },
          "cpu": {
            "title": "cpu",
            "description": "CPU usage gathered from the container.",
            "$ref": "#/components/schemas/runtime.v1.WindowsCpuUsage"
          },
          "memory": {
            "title": "memory",
            "description": "Memory usage gathered from the container.",
            "$ref": "#/components/schemas/runtime.v1.WindowsMemoryUsage"
          },
          "writableLayer": {
            "title": "writable_layer",
            "description": "Usage of the writable layer.",
            "$ref": "#/components/schemas/runtime.v1.WindowsFilesystemUsage"
          }
        },
        "title": "WindowsContainerStats",
        "additionalProperties": false,
        "description": "WindowsContainerStats provides the resource usage statistics for a container specific for Windows"
      },
      "runtime.v1.WindowsCpuGroupAffinity": {
        "type": "object",
        "properties": {
          "cpuMask": {
            "type": [
              "integer",
              "string"
            ],
            "title": "cpu_mask",
            "format": "int64",
            "description": "CPU mask relative to this CPU group."
          },
          "cpuGroup": {
            "type": "integer",
            "title": "cpu_group",
            "description": "Processor group the mask refers to, as returned by\n GetLogicalProcessorInformationEx."
          }
        },
        "title": "WindowsCpuGroupAffinity",
        "additionalProperties": false,
        "description": "WindowsCpuGroupAffinity specifies the CPU mask and group to affinitize.\n This is similar to the following _GROUP_AFFINITY structure:\n https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/miniport/ns-miniport-_group_affinity"
      },
      "runtime.v1.WindowsCpuUsage": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timestamp",
            "format": "int64",
            "description": "Timestamp in nanoseconds at which the information were collected. Must be \u003e 0."
          },
          "usageCoreNanoSeconds": {
            "title": "usage_core_nano_seconds",
            "description": "Cumulative CPU usage (sum across all cores) since object creation.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "usageNanoCores": {
            "title": "usage_nano_cores",
            "description": "Total CPU usage (sum of all cores) averaged over the sample window.\n The \"core\" unit can be interpreted as CPU core-nanoseconds per second.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          }
        },
        "title": "WindowsCpuUsage",
        "additionalProperties": false,
        "description": "WindowsCpuUsage provides the CPU usage information specific to Windows"
      },
      "runtime.v1.WindowsFilesystemUsage": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timestamp",
            "format": "int64",
            "description": "Timestamp in nanoseconds at which the information were collected. Must be \u003e 0."
          },
          "fsId": {
            "title": "fs_id",
            "description": "The unique identifier of the filesystem.",
            "$ref": "#/components/schemas/runtime.v1.FilesystemIdentifier"
          },
          "usedBytes": {
            "title": "used_bytes",
            "description": "UsedBytes represents the bytes used for images on the filesystem.\n This may differ from the total bytes used on the filesystem and may not\n equal CapacityBytes - AvailableBytes.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          }
        },
        "title": "WindowsFilesystemUsage",
        "additionalProperties": false,
        "description": "WindowsFilesystemUsage provides the filesystem usage information specific to Windows."
      },
      "runtime.v1.WindowsMemoryUsage": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timestamp",
            "format": "int64",
            "description": "Timestamp in nanoseconds at which the information were collected. Must be \u003e 0."
          },
          "workingSetBytes": {
            "title": "working_set_bytes",
            "description": "The amount of working set memory in bytes.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "availableBytes": {
            "title": "available_bytes",
            "description": "Available memory for use. This is defined as the memory limit - commit_memory_bytes.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "pageFaults": {
            "title": "page_faults",
            "description": "Cumulative number of page faults.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "commitMemoryBytes": {
            "title": "commit_memory_bytes",
            "description": "Total commit memory in use. Commit memory is total of physical and virtual memory in use.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          }
        },
        "title": "WindowsMemoryUsage",
        "additionalProperties": false,
        "description": "WindowsMemoryUsage provides the memory usage information specific to Windows"
      },
      "runtime.v1.WindowsNamespaceOption": {
        "type": "object",
        "properties": {
          "network": {
            "title": "network",
            "description": "Network namespace for this container/sandbox.\n This is currently never set by the kubelet",
            "$ref": "#/components/schemas/runtime.v1.NamespaceMode"
          }
        },
        "title": "WindowsNamespaceOption",
        "additionalProperties": false,
        "description": "WindowsNamespaceOption provides options for Windows namespaces."
      },
      "runtime.v1.WindowsNetworkInterfaceUsage": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "name",
            "description": "The name of the network interface."
          },
          "rxBytes": {
            "title": "rx_bytes",
            "description": "Cumulative count of bytes received.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "rxPacketsDropped": {
            "title": "rx_packets_dropped",
            "description": "Cumulative count of receive errors encountered.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "txBytes": {
            "title": "tx_bytes",
            "description": "Cumulative count of bytes transmitted.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          },
          "txPacketsDropped": {
            "title": "tx_packets_dropped",
            "description": "Cumulative count of transmit errors encountered.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          }
        },
        "title": "WindowsNetworkInterfaceUsage",
        "additionalProperties": false,
        "description": "WindowsNetworkInterfaceUsage contains resource value data about a network interface specific for Windows."
      },
      "runtime.v1.WindowsNetworkUsage": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timestamp",
            "format": "int64",
            "description": "Timestamp in nanoseconds at which the information were collected. Must be \u003e 0."
          },
          "defaultInterface": {
            "title": "default_interface",
            "description": "Stats for the default network interface.",
            "$ref": "#/components/schemas/runtime.v1.WindowsNetworkInterfaceUsage"
          },
          "interfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.WindowsNetworkInterfaceUsage"
            },
            "title": "interfaces",
            "description": "Stats for all found network interfaces, excluding the default."
          }
        },
        "title": "WindowsNetworkUsage",
        "additionalProperties": false,
        "description": "WindowsNetworkUsage contains data about network resources specific to Windows."
      },
      "runtime.v1.WindowsPodSandboxConfig": {
        "type": "object",
        "properties": {
          "securityContext": {
            "title": "security_context",
            "description": "WindowsSandboxSecurityContext holds sandbox security attributes.",
            "$ref": "#/components/schemas/runtime.v1.WindowsSandboxSecurityContext"
          }
        },
        "title": "WindowsPodSandboxConfig",
        "additionalProperties": false,
        "description": "WindowsPodSandboxConfig holds platform-specific configurations for Windows\n host platforms and Windows-based containers."
      },
      "runtime.v1.WindowsPodSandboxStats": {
        "type": "object",
        "properties": {
          "cpu": {
            "title": "cpu",
            "description": "CPU usage gathered for the pod sandbox.",
            "$ref": "#/components/schemas/runtime.v1.WindowsCpuUsage"
          },
          "memory": {
            "title": "memory",
            "description": "Memory usage gathered for the pod sandbox.",
            "$ref": "#/components/schemas/runtime.v1.WindowsMemoryUsage"
          },
          "network": {
            "title": "network",
            "description": "Network usage gathered for the pod sandbox",
            "$ref": "#/components/schemas/runtime.v1.WindowsNetworkUsage"
          },
          "process": {
            "title": "process",
            "description": "Stats pertaining to processes in the pod sandbox.",
            "$ref": "#/components/schemas/runtime.v1.WindowsProcessUsage"
          },
          "containers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/runtime.v1.WindowsContainerStats"
            },
            "title": "containers",
            "description": "Stats of containers in the measured pod sandbox."
          }
        },
        "title": "WindowsPodSandboxStats",
        "additionalProperties": false,
        "description": "WindowsPodSandboxStats provides the resource usage statistics for a pod sandbox on windows"
      },
      "runtime.v1.WindowsProcessUsage": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timestamp",
            "format": "int64",
            "description": "Timestamp in nanoseconds at which the information were collected. Must be \u003e 0."
          },
          "processCount": {
            "title": "process_count",
            "description": "Number of processes.",
            "$ref": "#/components/schemas/runtime.v1.UInt64Value"
          }
        },
        "title": "WindowsProcessUsage",
        "additionalProperties": false,
        "description": "WindowsProcessUsage are stats pertaining to processes specific to Windows."
      },
      "runtime.v1.WindowsSandboxSecurityContext": {
        "type": "object",
        "properties": {
          "runAsUsername": {
            "type": "string",
            "title": "run_as_username",
            "description": "User name to run the container process as. If specified, the user MUST\n exist in the container image and be resolved there by the runtime;\n otherwise, the runtime MUST return error."
          },
          "credentialSpec": {
            "type": "string",
            "title": "credential_spec",
            "description": "The contents of the GMSA credential spec to use to run this container."
          },
          "hostProcess": {
            "type": "boolean",
            "title": "host_process",
            "description": "Indicates whether the container requested to run as a HostProcess container."
          },
          "namespaceOptions": {
            "title": "namespace_options",
            "description": "Configuration for the sandbox's namespaces",
            "$ref": "#/components/schemas/runtime.v1.WindowsNamespaceOption"
          }
        },
        "title": "WindowsSandboxSecurityContext",
        "additionalProperties": false,
        "description": "WindowsSandboxSecurityContext holds platform-specific configurations that will be\n applied to a sandbox.\n These settings will only apply to the sandbox container."
      }
    }
  },
  "security": [],
  "tags": [
    {
      "name": "runtime.v1.RuntimeService",
      "description": "Runtime service defines the public APIs for remote container runtimes"
    },
    {
      "name": "runtime.v1.ImageService",
      "description": "ImageService defines the public APIs for managing images."
    }
  ]
}