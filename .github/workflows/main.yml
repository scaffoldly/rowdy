name: CI/CD (@scaffoldly/rowdy)

on:
  push:
    branches-ignore: 
      - claude/**,
      - dependabot/**,
    branches:
      - main
  pull_request_target:
    branches:
      - main
  workflow_dispatch: {}

permissions: write-all

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    name: Quality Checks

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Run lint
        run: yarn lint

      - name: Run build
        run: yarn run build

  unit-tests:
    runs-on: ubuntu-latest
    name: Unit Tests

    strategy:
      fail-fast: false
      matrix:
        node-version: [22.x, 24.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Run unit tests
        run: yarn test

      - name: Upload coverage reports
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false

  prerelease:
    runs-on: ubuntu-latest
    needs: [quality-checks, unit-tests]
    name: Pre-release to NPM & GHCR
    if: |
      success() &&
      github.ref == 'refs/heads/main' &&
      github.event_name != 'pull_request_target' &&
      !contains(github.event.head_commit.message, '[skip-prerelease]')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'yarn'
          registry-url: 'https://registry.npmjs.org'

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install dependencies
        run: yarn

      - name: Generate pre-release version
        id: version
        run: |
          CURRENT_NAME=$(node -p "require('./package.json').name")
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          SHORT_SHA=${GITHUB_SHA:0:7}
          PRERELEASE_VERSION="${CURRENT_VERSION}-beta.${TIMESTAMP}.${SHORT_SHA}"
          echo "name=${CURRENT_NAME}" >> $GITHUB_OUTPUT
          echo "version=${PRERELEASE_VERSION}" >> $GITHUB_OUTPUT
          echo "current=${CURRENT_VERSION}" >> $GITHUB_OUTPUT

      - name: Update package.json version
        run: |
          yarn version --new-version ${{ steps.version.outputs.version }} --no-git-tag-version

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository }}
            ${{ github.repository}}
          tags: |
            type=raw,value=${{ steps.version.outputs.version }}
            type=raw,value=beta
            type=sha

      - name: Publish pre-release to NPM
        run: yarn publish --tag beta --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          pull: true
          push: true

      - name: Create pre-release summary
        run: |
          echo "## 🚀 Pre-release Published" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Package:** ${{ steps.version.outputs.name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** beta" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${GITHUB_SHA:0:7}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 NPM Package" >> $GITHUB_STEP_SUMMARY
          echo "Install the pre-release version:" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "npm install ${{ steps.version.outputs.name }}@beta" >> $GITHUB_STEP_SUMMARY
          echo "# or specific version:" >> $GITHUB_STEP_SUMMARY
          echo "npm install ${{ steps.version.outputs.name }}@${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🐳 Docker Image" >> $GITHUB_STEP_SUMMARY
          echo "Pull the pre-release Docker image:" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "docker pull ghcr.io/${{ github.repository }}:beta" >> $GITHUB_STEP_SUMMARY
          echo "# or specific version:" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Note:** Add \`[skip-prerelease]\` to commit message to skip pre-release publishing." >> $GITHUB_STEP_SUMMARY
