name: Multi-arch Build

on:
  workflow_call:
    inputs:
      add-hosts:
        required: false
        type: string
      allow:
        required: false
        type: string
      annotations:
        required: false
        type: string
      attests:
        required: false
        type: string
      builder:
        required: false
        type: string
      build-args:
        required: false
        type: string
      build-contexts:
        required: false
        type: string
      cache-from:
        required: false
        type: string
      cache-to:
        required: false
        type: string
      call:
        required: false
        type: string
      cgroup-parent:
        required: false
        type: string
      context:
        required: false
        type: string
        default: '.'
      file:
        required: false
        type: string
        default: 'Dockerfile'
      labels:
        required: false
        type: string
      load:
        required: false
        type: boolean
        default: false
      network:
        required: false
        type: string
      no-cache:
        required: false
        type: boolean
        default: false
      no-cache-filters:
        required: false
        type: string
      outputs:
        required: false
        type: string
      platforms:
        required: false
        type: string
        default: 'linux/amd64,linux/arm64'
      provenance:
        required: false
        type: string
      pull:
        required: false
        type: boolean
        default: false
      push:
        required: false
        type: boolean
        default: true
      sbom:
        required: false
        type: string
      secrets:
        required: false
        type: string
      secret-envs:
        required: false
        type: string
      secret-files:
        required: false
        type: string
      shm-size:
        required: false
        type: string
      ssh:
        required: false
        type: string
      tags:
        required: true
        type: string
      target:
        required: false
        type: string
      ulimit:
        required: false
        type: string
      github-token:
        required: false
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  map:
    name: Map Platforms
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.map.outputs.matrix }}
    steps:
      - name: Map platforms to matrix
        id: map
        run: |
          platforms="${{ inputs.platforms }}"
          # Convert comma-separated platforms to JSON array
          matrix=$(echo "$platforms" | jq -R -c 'split(",") | map(gsub("^[[:space:]]+|[[:space:]]+$";"")) | {platform: .}')
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
          echo "Generated matrix: $matrix"

  build:
    name: Build ${{ matrix.platform }}
    runs-on: ubuntu-latest
    needs: map
    strategy:
      matrix: ${{ fromJson(needs.map.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build for ${{ matrix.platform }}
        uses: docker/build-push-action@v6
        with:
          add-hosts: ${{ inputs.add-hosts }}
          allow: ${{ inputs.allow }}
          annotations: ${{ inputs.annotations }}
          attests: ${{ inputs.attests }}
          builder: ${{ inputs.builder }}
          build-args: ${{ inputs.build-args }}
          build-contexts: ${{ inputs.build-contexts }}
          cache-from: ${{ inputs.cache-from }}
          cache-to: ${{ inputs.cache-to }}
          call: ${{ inputs.call }}
          cgroup-parent: ${{ inputs.cgroup-parent }}
          context: ${{ inputs.context }}
          file: ${{ inputs.file }}
          labels: ${{ inputs.labels }}
          load: ${{ inputs.load }}
          network: ${{ inputs.network }}
          no-cache: ${{ inputs.no-cache }}
          no-cache-filters: ${{ inputs.no-cache-filters }}
          outputs: ${{ inputs.outputs }}
          platforms: ${{ matrix.platform }}
          provenance: ${{ inputs.provenance }}
          pull: ${{ inputs.pull }}
          push: false
          sbom: ${{ inputs.sbom }}
          secrets: ${{ inputs.secrets }}
          secret-envs: ${{ inputs.secret-envs }}
          secret-files: ${{ inputs.secret-files }}
          shm-size: ${{ inputs.shm-size }}
          ssh: ${{ inputs.ssh }}
          tags: ${{ inputs.tags }}
          target: ${{ inputs.target }}
          ulimit: ${{ inputs.ulimit }}
          github-token: ${{ inputs.github-token }}